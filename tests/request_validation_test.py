# coding: utf-8
# DO NOT EDIT: File is generated by code generator.

import unittest
import pokepay_partner_python_sdk as pp

client = pp.Client('~/.pokepay/config.ini')


class PokepayTest(unittest.TestCase):

    def test_get_ping_0(self):
        response = client.send(pp.GetPing(
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_send_echo_0(self):
        response = client.send(pp.SendEcho(
                                  "x5LkC"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_get_user_0(self):
        response = client.send(pp.GetUser(
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_list_user_accounts_0(self):
        response = client.send(pp.ListUserAccounts(
                                  "212899ad-6aa7-43bc-bcf7-ec40e2c7da82"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_get_account_0(self):
        response = client.send(pp.GetAccount(
                                  "a831366d-f4a9-4179-9e88-ce2e065fef44"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_update_account_0(self):
        response = client.send(pp.UpdateAccount(
                                  "3a001376-6c2b-4a04-8d79-89169f0630cf"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_update_account_1(self):
        response = client.send(pp.UpdateAccount(
                                  "3a001376-6c2b-4a04-8d79-89169f0630cf",
                                  is_suspended=True
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_list_account_balances_0(self):
        response = client.send(pp.ListAccountBalances(
                                  "a5046c02-ab2c-4cba-b43e-3e54a2ea2b39"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_list_account_balances_1(self):
        response = client.send(pp.ListAccountBalances(
                                  "a5046c02-ab2c-4cba-b43e-3e54a2ea2b39",
                                  direction="desc"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_list_account_balances_2(self):
        response = client.send(pp.ListAccountBalances(
                                  "a5046c02-ab2c-4cba-b43e-3e54a2ea2b39",
                                  expires_at_to="2019-12-29T02:14:55.000000+09:00",
                                  direction="asc"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_list_account_balances_3(self):
        response = client.send(pp.ListAccountBalances(
                                  "a5046c02-ab2c-4cba-b43e-3e54a2ea2b39",
                                  expires_at_from="2016-08-06T21:40:02.000000+09:00",
                                  expires_at_to="2022-06-30T05:55:08.000000+09:00",
                                  direction="asc"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_list_account_balances_4(self):
        response = client.send(pp.ListAccountBalances(
                                  "a5046c02-ab2c-4cba-b43e-3e54a2ea2b39",
                                  per_page=9168,
                                  expires_at_from="2016-02-06T03:51:32.000000+09:00",
                                  expires_at_to="2022-08-12T07:10:12.000000+09:00",
                                  direction="desc"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_list_account_balances_5(self):
        response = client.send(pp.ListAccountBalances(
                                  "a5046c02-ab2c-4cba-b43e-3e54a2ea2b39",
                                  page=5702,
                                  per_page=5968,
                                  expires_at_from="2018-12-14T02:38:53.000000+09:00",
                                  expires_at_to="2024-08-03T00:39:46.000000+09:00",
                                  direction="asc"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_list_account_expired_balances_0(self):
        response = client.send(pp.ListAccountExpiredBalances(
                                  "53b6208b-2b7e-4895-a427-123de7df90af"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_list_account_expired_balances_1(self):
        response = client.send(pp.ListAccountExpiredBalances(
                                  "53b6208b-2b7e-4895-a427-123de7df90af",
                                  direction="asc"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_list_account_expired_balances_2(self):
        response = client.send(pp.ListAccountExpiredBalances(
                                  "53b6208b-2b7e-4895-a427-123de7df90af",
                                  expires_at_to="2020-10-06T07:23:29.000000+09:00",
                                  direction="asc"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_list_account_expired_balances_3(self):
        response = client.send(pp.ListAccountExpiredBalances(
                                  "53b6208b-2b7e-4895-a427-123de7df90af",
                                  expires_at_from="2016-12-19T02:04:52.000000+09:00",
                                  expires_at_to="2020-06-02T05:54:24.000000+09:00",
                                  direction="desc"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_list_account_expired_balances_4(self):
        response = client.send(pp.ListAccountExpiredBalances(
                                  "53b6208b-2b7e-4895-a427-123de7df90af",
                                  per_page=5130,
                                  expires_at_from="2025-04-13T18:40:57.000000+09:00",
                                  expires_at_to="2022-11-14T21:41:18.000000+09:00",
                                  direction="asc"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_list_account_expired_balances_5(self):
        response = client.send(pp.ListAccountExpiredBalances(
                                  "53b6208b-2b7e-4895-a427-123de7df90af",
                                  page=1032,
                                  per_page=5276,
                                  expires_at_from="2022-06-13T13:00:52.000000+09:00",
                                  expires_at_to="2018-08-05T21:19:29.000000+09:00",
                                  direction="desc"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_get_customer_accounts_0(self):
        response = client.send(pp.GetCustomerAccounts(
                                  "3c3a1106-8f85-421d-960e-c59c844f8a86"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_get_customer_accounts_1(self):
        response = client.send(pp.GetCustomerAccounts(
                                  "3c3a1106-8f85-421d-960e-c59c844f8a86",
                                  email="HhYEF8mznE@Ai92.com"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_get_customer_accounts_2(self):
        response = client.send(pp.GetCustomerAccounts(
                                  "3c3a1106-8f85-421d-960e-c59c844f8a86",
                                  tel="0850-3380-253",
                                  email="irlH7l4XGw@M37F.com"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_get_customer_accounts_3(self):
        response = client.send(pp.GetCustomerAccounts(
                                  "3c3a1106-8f85-421d-960e-c59c844f8a86",
                                  external_id="uK76ssvqIV57CM0jXhhVci1pwX",
                                  tel="044836-159",
                                  email="SksagEOuNz@u6b2.com"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_get_customer_accounts_4(self):
        response = client.send(pp.GetCustomerAccounts(
                                  "3c3a1106-8f85-421d-960e-c59c844f8a86",
                                  is_suspended=False,
                                  external_id="A1WA2evgkWUVRLhIzDQ912sNLIwg0tllCWT",
                                  tel="02-69-725",
                                  email="CwYVnWDi84@q4O5.com"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_get_customer_accounts_5(self):
        response = client.send(pp.GetCustomerAccounts(
                                  "3c3a1106-8f85-421d-960e-c59c844f8a86",
                                  created_at_to="2016-01-20T00:38:09.000000+09:00",
                                  is_suspended=True,
                                  external_id="Ptjnjuxq69fm",
                                  tel="023682773",
                                  email="knaHo9D3Dz@Ip66.com"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_get_customer_accounts_6(self):
        response = client.send(pp.GetCustomerAccounts(
                                  "3c3a1106-8f85-421d-960e-c59c844f8a86",
                                  created_at_from="2022-11-23T05:07:11.000000+09:00",
                                  created_at_to="2024-06-24T22:28:44.000000+09:00",
                                  is_suspended=False,
                                  external_id="d8VMw5t34VSa",
                                  tel="058-8819293",
                                  email="clAzY4779g@rouz.com"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_get_customer_accounts_7(self):
        response = client.send(pp.GetCustomerAccounts(
                                  "3c3a1106-8f85-421d-960e-c59c844f8a86",
                                  per_page=9396,
                                  created_at_from="2018-07-19T19:21:23.000000+09:00",
                                  created_at_to="2022-06-26T16:46:35.000000+09:00",
                                  is_suspended=True,
                                  external_id="ZkRyIgWSsCkBuCkFgF6d9XFxVsw",
                                  tel="03-31183963",
                                  email="RWFVHs34oJ@7TiY.com"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_get_customer_accounts_8(self):
        response = client.send(pp.GetCustomerAccounts(
                                  "3c3a1106-8f85-421d-960e-c59c844f8a86",
                                  page=5917,
                                  per_page=7717,
                                  created_at_from="2019-02-17T04:52:20.000000+09:00",
                                  created_at_to="2017-05-18T03:06:57.000000+09:00",
                                  is_suspended=False,
                                  external_id="UZ5cn",
                                  tel="07-158-6486",
                                  email="80qBh9YLXh@u4Kd.com"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_create_customer_account_0(self):
        response = client.send(pp.CreateCustomerAccount(
                                  "5d94621e-1973-46a5-b976-5b501e54bf14"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_create_customer_account_1(self):
        response = client.send(pp.CreateCustomerAccount(
                                  "5d94621e-1973-46a5-b976-5b501e54bf14",
                                  external_id="SsErCZYrKLrXAF2lsP4BYQaeoNaTefug"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_create_customer_account_2(self):
        response = client.send(pp.CreateCustomerAccount(
                                  "5d94621e-1973-46a5-b976-5b501e54bf14",
                                  account_name="u9pPuSJCqysHhc4BSJikrlGqR36os8Q3rZD4LAzLl4XSwda3GPpVx7C2q8w7JPpwtyQyCPvCml0ctOfRmNASnaQgmecU0TkNAsIfn7sNBhkAcWCMCiVMooa8qWlnsPD1RzQz7fWijelK3yW5Rieu9W0YzNvtnenvg37ZDH6awM6ayLCU9sxDiUTXNJuThAojUedCT1YEa",
                                  external_id="9pFsEvlvYWHcqOKqrKOFAe8vwRXy71L5wwhSeGizle"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_create_customer_account_3(self):
        response = client.send(pp.CreateCustomerAccount(
                                  "5d94621e-1973-46a5-b976-5b501e54bf14",
                                  user_name="25nF3AhOvshpnhjxg9c5xWsARh7fOPMOpmnU9Pr1rcVWqHcrTswMxeGFe3cLnYXb3VLXSM56fgvvmWvW264ct4OccPjqy45ugNuOvvPr634Fexe51zd5zB7La64TDimX3TmpWnMUbr2WU1ANedk7OZKtMIjtJkA4rj4l71XG2dU7pf8WrmsNuwRH1cFuM0MdjqWWmCc95ALgQFZiYAbvwVFTy9Tqs7IYiet0AZEp",
                                  account_name="Ys1EV1zz3Fi8kVteVGGLNrz6BX9HkctbBVAPF7O0xHyStmb8xXC82hfrWDcVZ6QiE90WemEcv05J16XQn7utlgl7IdgxTe13M99mauvQ7yNXnTI7p0M2HEWWI4iGsziFaeR7zZgle4HQ9pLNp4vY8GeBqFMIaOqyAEkbTwG5RuWWF5dIqJDcMguF1AZFTWFg6QaagX0Vs4xTUWJ6POVzGCOn2JdZzcQ3ykn2Ercmgrq4symNQ3t65piwV8D",
                                  external_id="8klPS"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_get_shop_accounts_0(self):
        response = client.send(pp.GetShopAccounts(
                                  "8d45406a-b9e6-4d7e-8eaf-50f3b1133dfa"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_get_shop_accounts_1(self):
        response = client.send(pp.GetShopAccounts(
                                  "8d45406a-b9e6-4d7e-8eaf-50f3b1133dfa",
                                  is_suspended=True
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_get_shop_accounts_2(self):
        response = client.send(pp.GetShopAccounts(
                                  "8d45406a-b9e6-4d7e-8eaf-50f3b1133dfa",
                                  created_at_to="2025-05-11T07:43:33.000000+09:00",
                                  is_suspended=False
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_get_shop_accounts_3(self):
        response = client.send(pp.GetShopAccounts(
                                  "8d45406a-b9e6-4d7e-8eaf-50f3b1133dfa",
                                  created_at_from="2019-06-08T21:45:24.000000+09:00",
                                  created_at_to="2024-03-12T02:34:49.000000+09:00",
                                  is_suspended=False
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_get_shop_accounts_4(self):
        response = client.send(pp.GetShopAccounts(
                                  "8d45406a-b9e6-4d7e-8eaf-50f3b1133dfa",
                                  per_page=3707,
                                  created_at_from="2019-05-22T17:43:23.000000+09:00",
                                  created_at_to="2025-01-04T08:28:23.000000+09:00",
                                  is_suspended=True
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_get_shop_accounts_5(self):
        response = client.send(pp.GetShopAccounts(
                                  "8d45406a-b9e6-4d7e-8eaf-50f3b1133dfa",
                                  page=1199,
                                  per_page=4595,
                                  created_at_from="2022-05-01T13:26:13.000000+09:00",
                                  created_at_to="2018-05-28T03:36:33.000000+09:00",
                                  is_suspended=True
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_list_bills_0(self):
        response = client.send(pp.ListBills(
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_list_bills_1(self):
        response = client.send(pp.ListBills(
                                  is_disabled=True
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_list_bills_2(self):
        response = client.send(pp.ListBills(
                                  upper_limit_amount=6654,
                                  is_disabled=False
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_list_bills_3(self):
        response = client.send(pp.ListBills(
                                  lower_limit_amount=8372,
                                  upper_limit_amount=9966,
                                  is_disabled=False
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_list_bills_4(self):
        response = client.send(pp.ListBills(
                                  shop_id="d6c7ecb8-520f-48af-9d61-46ff477ccbd2",
                                  lower_limit_amount=1973,
                                  upper_limit_amount=2011,
                                  is_disabled=False
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_list_bills_5(self):
        response = client.send(pp.ListBills(
                                  shop_name="1le",
                                  shop_id="fcd9ae84-f9fa-40bb-a9b2-904a16e5e72e",
                                  lower_limit_amount=2488,
                                  upper_limit_amount=9630,
                                  is_disabled=True
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_list_bills_6(self):
        response = client.send(pp.ListBills(
                                  created_to="2021-01-29T18:53:11.000000+09:00",
                                  shop_name="oXFwfG5xeDixgnKRMdRx3h2roVC5fEdGOUPaYaJ5kymjdoXpUdgYFkdU3af62czix3EkdFgyWOJrl4YeI5RHNW2MiG8m4eR8pMTZxhRKRDOHuXQmtY1xGeLaXQ19kMSyxg5p6LGSRiJ48B0uILaExNx2DfksFWamBFCoddgXTBCcThnwNp7dA59WwlvWZYh6mejBGEfP0csSwfmY530rLvX",
                                  shop_id="b57f7052-efe5-4f4f-8c27-f9a8eb949bd0",
                                  lower_limit_amount=4307,
                                  upper_limit_amount=7162,
                                  is_disabled=False
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_list_bills_7(self):
        response = client.send(pp.ListBills(
                                  created_from="2022-11-30T08:29:15.000000+09:00",
                                  created_to="2024-04-01T02:17:06.000000+09:00",
                                  shop_name="Zmzq5zbrk45lxHtEbHz3Ty1dxVbOwglAq5KtQUHJoxkE",
                                  shop_id="0eadbc99-1d30-4a03-a12b-4be47e9a4af4",
                                  lower_limit_amount=5013,
                                  upper_limit_amount=6229,
                                  is_disabled=True
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_list_bills_8(self):
        response = client.send(pp.ListBills(
                                  description="wIGGKJkpn9kgSnfF5cU4MewfxRr5dNmTUUhwJvtecj01mCej3xH9jbeDguv2T0sRnSWkhXRJVxVNfFhe2lKcG6k0kQo2CaBGhXuIh17RUzHIBKR087l0PWmPo2ap31CZt39Yu05TMm5PUvv4uoLVrP5PzSvHdFwK1O0avvAPy200WMyx3k0vuXjjrtE",
                                  created_from="2025-03-25T08:18:38.000000+09:00",
                                  created_to="2018-08-21T22:56:38.000000+09:00",
                                  shop_name="rOoKYhiJSISv6cNWcNgVFjN2OiEaG6ohRzow9OhmvtgILlZt0AzrxgbQcK4q8h7BDFO74DlNC5XeAhiEFUu84PtzbzKEz9H2Pk4ACWnnRF5jUbyUacs2TrJQq5aLXXXhbIGqWxBJyxmwRXEsYbquOKARlBInru5Uw1G9QbU6voN3MriESm",
                                  shop_id="33d9abfd-328b-41b5-a487-afa3c7bf0bb5",
                                  lower_limit_amount=2011,
                                  upper_limit_amount=4014,
                                  is_disabled=False
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_list_bills_9(self):
        response = client.send(pp.ListBills(
                                  organization_code="2Yca0puTDf--q-2-pMo5--5U",
                                  description="wPfppGNF7NTH8FeKGZQIO1ZPTxvaRCF6vlUU2ZPMpbpWaKp09IblVe0GhOD",
                                  created_from="2016-05-01T07:50:21.000000+09:00",
                                  created_to="2017-12-12T09:37:56.000000+09:00",
                                  shop_name="BaxhT9GkuXavEjyB3GIzRwKYcQdVpyFafifwe2LlTi6adYQzuGTa1WHlzAJ0YGLzusSA3yXtrylF9FQenXLwVMwOn7cxCmW9w0Dlisy49",
                                  shop_id="9a51cc8b-e0ac-4ab0-9dbc-6250e8c7c638",
                                  lower_limit_amount=8211,
                                  upper_limit_amount=8244,
                                  is_disabled=True
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_list_bills_10(self):
        response = client.send(pp.ListBills(
                                  private_money_id="1aab7de4-4048-4442-89ce-47071f314fd8",
                                  organization_code="d3-D--9",
                                  description="ym0xUuFwu1xbeFTFUP7NANimlTU9O3FHzNknRARR57gYrMwT6vidEZCJLoKwGFNyOaUpBw17g3SdKesK0mJmmYpT4InnJZbkAP0VMLcsD1TqXW9TFrKHVeQgrnLpJYmSG537B4JUrnRFYrrHBe",
                                  created_from="2021-01-04T08:23:36.000000+09:00",
                                  created_to="2023-11-07T22:59:36.000000+09:00",
                                  shop_name="33ctQ43q11bqooKoZVilMhRl5JMQHTDb84il8WqqLYSc4wjpEdUXlEfNMpw",
                                  shop_id="3c66c06d-c51f-4ad6-9027-c820bbfefd71",
                                  lower_limit_amount=3292,
                                  upper_limit_amount=2122,
                                  is_disabled=False
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_list_bills_11(self):
        response = client.send(pp.ListBills(
                                  bill_id="RcoJOu6F",
                                  private_money_id="2c60b3d1-194c-476a-9fea-a54a4ba2689a",
                                  organization_code="-mD-Iw64g1--Aq",
                                  description="D9a5TprlJwlHe9Uav6FCHr76bNDUKiwrozVjxjcf3I9t09x2xk0HWMGM75MU4WvP09WykGmRZyGozJwpZezwmRBpwS9hU9nMkzk22htHpboIOanmFWu6BoXTFlnSifJ0xUZ3HsFoSJNgQp5Nd6TJUx",
                                  created_from="2018-08-20T20:58:02.000000+09:00",
                                  created_to="2020-05-19T10:03:31.000000+09:00",
                                  shop_name="G1BTspWs1yF82gVtPA1HKQeLHT8VGq4xWJp7Zopa0H8aasHFzam6pEujFJAtxieMPwqQpwtrSzADtablhY6Bpl7GeB7Dor7FhdN9ptbD8qimffQauhiI2owHKUIAjoTYQdmSdG5aZkaIJg3H5vQiHZCXhSwYKaFVLv9AR9cO09MnT7va329pEECKrZYw",
                                  shop_id="3bcf4bf1-98a7-426c-b8e6-26f267f340bc",
                                  lower_limit_amount=8522,
                                  upper_limit_amount=2353,
                                  is_disabled=False
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_list_bills_12(self):
        response = client.send(pp.ListBills(
                                  per_page=1888,
                                  bill_id="zUWC3u",
                                  private_money_id="56e3be8a-081b-438d-a50c-9786ceb37ed9",
                                  organization_code="a280B8oT-0Z-n",
                                  description="LoeZLjfq4Ar6GVJm3ZAVPjtqxVcIIV3xaTXuXsHWuF6ONGCP9SSgdFaTJIeADyF3nItnFYIQzlT4SOS5jV6gzp2bIHT2J3oaiAyXbZtOFNTnW3dbTBLHb6lUgz4J8HW7vjUFTEvKp1aiOOfDbKPJjSi",
                                  created_from="2019-06-27T12:01:47.000000+09:00",
                                  created_to="2022-08-30T11:14:51.000000+09:00",
                                  shop_name="leUgvzTssX9HvKi3EPhH3N6X1BbnIev3lurhGgKxiHS5eU27MdnG9Y76GD96IIJK2AEjtvmfAM0gV9vGgMZfyszIOhzhZJBhW",
                                  shop_id="54d024b4-5aed-4936-84d3-684bc9ab98a8",
                                  lower_limit_amount=7272,
                                  upper_limit_amount=598,
                                  is_disabled=False
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_list_bills_13(self):
        response = client.send(pp.ListBills(
                                  page=5371,
                                  per_page=3233,
                                  bill_id="AaUWUh2q",
                                  private_money_id="aa677b51-780c-41ce-9152-0928fe6818bc",
                                  organization_code="-dVXG5-",
                                  description="LPda4Sw4YpfDUFHC4txr1soJ99FepvVxG0zX12rs0ElcI3quRLBqoolWTJ",
                                  created_from="2020-09-07T11:11:53.000000+09:00",
                                  created_to="2023-04-30T18:39:08.000000+09:00",
                                  shop_name="92OD24IUkzL09lLHBXKGfVojKuvJAD6KXfGLz",
                                  shop_id="111da21f-6f9e-4690-86d4-edceee9cad9d",
                                  lower_limit_amount=854,
                                  upper_limit_amount=7464,
                                  is_disabled=False
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_create_bill_0(self):
        response = client.send(pp.CreateBill(
                                  "48eec546-3150-4823-a3d9-1364906cf476",
                                  "86ab658f-5cc5-4b55-9a1c-4471628b8f1a"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_create_bill_1(self):
        response = client.send(pp.CreateBill(
                                  "48eec546-3150-4823-a3d9-1364906cf476",
                                  "86ab658f-5cc5-4b55-9a1c-4471628b8f1a",
                                  description="HpkxUcHzoxPWtMVknDiBNCaPtARZEmEWmBEIxrtu6qVXFU4HQiQrH0g3mdzRbJzxkkWNgDhaiTL1vJ7MaQahy92rCPhJjzxlH2UxdOIZ9kbKYB7wYS5oq0nKRyexNR"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_create_bill_2(self):
        response = client.send(pp.CreateBill(
                                  "48eec546-3150-4823-a3d9-1364906cf476",
                                  "86ab658f-5cc5-4b55-9a1c-4471628b8f1a",
                                  amount=8162,
                                  description="2MwvbUMESrRYJMaTNb9EgxOwdmjPaZPxSIDx1zrq0zP5JRcrmyRpADYipXkunL4wIDfpUpPHzdL5xm7AlPoYm3goHqJZ7hYG0iEPAaY8XyMMPga6xbaqK"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_update_bill_0(self):
        response = client.send(pp.UpdateBill(
                                  "b47786e6-770e-4111-9f95-dc6a0c3c1dbf"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_update_bill_1(self):
        response = client.send(pp.UpdateBill(
                                  "b47786e6-770e-4111-9f95-dc6a0c3c1dbf",
                                  is_disabled=False
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_update_bill_2(self):
        response = client.send(pp.UpdateBill(
                                  "b47786e6-770e-4111-9f95-dc6a0c3c1dbf",
                                  description="arZfipeQyHcpe42sXoYAfdGWQuZANtQ1PBiaZ1vhrm6vZym7tNnfYsfNfAmTNWUSVNhXepfzwllPk0Nk5BZa02stob5KZ8GTQ2PU3EMq2Dls80kQr5E66BrT086zma6qvYUC8eL78WBP3W7psKD6mNmBnz32ZY3xXkCFOQKDE",
                                  is_disabled=False
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_update_bill_3(self):
        response = client.send(pp.UpdateBill(
                                  "b47786e6-770e-4111-9f95-dc6a0c3c1dbf",
                                  amount=5544,
                                  description="oOF0cprqcjlPVCrmLjfTrinsmQd1OXy3JjRJJO6zQOcMJ006gsQWowr3H5EpTmOUA",
                                  is_disabled=True
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_create_check_0(self):
        response = client.send(pp.CreateCheck(
                                  "245b5703-ed55-4c51-b13d-5270f5a69147",
                                  money_amount=1249
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_create_check_1(self):
        response = client.send(pp.CreateCheck(
                                  "245b5703-ed55-4c51-b13d-5270f5a69147",
                                  money_amount=224,
                                  description="dfKRFELYEx8dRASGqA1O7bgLIMUOtvpzt8HFVUvmaVx20vNqlGcZe9jqRi9XB"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_create_check_2(self):
        response = client.send(pp.CreateCheck(
                                  "245b5703-ed55-4c51-b13d-5270f5a69147",
                                  money_amount=8177,
                                  is_onetime=False,
                                  description="ocA9askeb7AsDoLykTDTVANf"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_create_check_3(self):
        response = client.send(pp.CreateCheck(
                                  "245b5703-ed55-4c51-b13d-5270f5a69147",
                                  money_amount=8923,
                                  usage_limit=9401,
                                  is_onetime=True,
                                  description="JV5w2juOIf42tsQaSc9eu6J1vVkIuEnLUyjwIyK5AIgnxVl2mPII7B8Vg7"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_create_check_4(self):
        response = client.send(pp.CreateCheck(
                                  "245b5703-ed55-4c51-b13d-5270f5a69147",
                                  money_amount=1762,
                                  expires_at="2019-09-29T19:21:17.000000+09:00",
                                  usage_limit=4786,
                                  is_onetime=False,
                                  description="MNI2O02YXVJ5JmCej60dPHEJumT0yNdLCtiVh6vrBogAK2pVNcQ1ZNd8g"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_create_check_5(self):
        response = client.send(pp.CreateCheck(
                                  "245b5703-ed55-4c51-b13d-5270f5a69147",
                                  money_amount=8649,
                                  point_expires_at="2024-06-01T08:43:31.000000+09:00",
                                  expires_at="2021-09-14T01:53:30.000000+09:00",
                                  usage_limit=2619,
                                  is_onetime=False,
                                  description="xd9qwOgzjQH32rz2syXd7e1r84c46mLy4brzAxyoeIcKaHlw7seZcy9UU5F3z43Ocgg7cAHjJfovpVgasy8nUz7OFhIgPB6dzLfcCoOZSr3YFjip8dC9kSLDfTKzuCtngyB9p"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_create_check_6(self):
        response = client.send(pp.CreateCheck(
                                  "245b5703-ed55-4c51-b13d-5270f5a69147",
                                  money_amount=5502,
                                  point_expires_in_days=798,
                                  point_expires_at="2018-09-28T11:02:12.000000+09:00",
                                  expires_at="2020-10-25T19:10:09.000000+09:00",
                                  usage_limit=3405,
                                  is_onetime=False,
                                  description="ApduMk2n5gNgPSBN32GlVZyh39RmBcdFjkWAFduuG5pTZKGAu74zV6knbpTN4jngJL"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_create_check_7(self):
        response = client.send(pp.CreateCheck(
                                  "245b5703-ed55-4c51-b13d-5270f5a69147",
                                  money_amount=1643,
                                  bear_point_account="64991d34-117a-4066-8dd7-83544c9ada90",
                                  point_expires_in_days=1980,
                                  point_expires_at="2021-11-30T23:15:27.000000+09:00",
                                  expires_at="2018-01-22T23:12:29.000000+09:00",
                                  usage_limit=2372,
                                  is_onetime=False,
                                  description="N7kVAZh5UZan4OSEe759M3f44ypM9OKkqbMBJWMeajW2lMm7vWBxhzM1RM8FkgJgXBR7ajOhqbn5BzA35dNT51KeYLlmXX69aiczI4nc"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_create_check_8(self):
        response = client.send(pp.CreateCheck(
                                  "245b5703-ed55-4c51-b13d-5270f5a69147",
                                  money_amount=8371,
                                  point_amount=6488
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_create_check_9(self):
        response = client.send(pp.CreateCheck(
                                  "245b5703-ed55-4c51-b13d-5270f5a69147",
                                  money_amount=6819,
                                  point_amount=3966,
                                  description="IBkkwjR7nnJ2LPRdxpD2vwYdaMZlzUirp0nsSzw6Z2NQr5KlhwaM9oFoUV9IzJQg81kMb0Jhb6OladMH6jceeLZMFZidwwamRSBANTtQzazIwiJ7YS44Lsive6LSWQLzmzeK1t"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_create_check_10(self):
        response = client.send(pp.CreateCheck(
                                  "245b5703-ed55-4c51-b13d-5270f5a69147",
                                  money_amount=9881,
                                  point_amount=9832,
                                  is_onetime=False,
                                  description="BkLeNUnIpplACVzBZRhYfCgdAN5uXoXSP1MiOViPIEGvYnjSCWXlnU0sbtjqlqZLGJ2KTNIe"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_create_check_11(self):
        response = client.send(pp.CreateCheck(
                                  "245b5703-ed55-4c51-b13d-5270f5a69147",
                                  money_amount=5983,
                                  point_amount=7419,
                                  usage_limit=5991,
                                  is_onetime=False,
                                  description="ZYNQbpI1umLrL3A2abGWSe8nqKX1QkHh38dQ6Ia7xv8UbJrgw4B6nlMhPBEnLEJ7zaH4qI9y4AstlSoo6etg4HsM4YFCYATBNFLVK7wEUPYTcKco"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_create_check_12(self):
        response = client.send(pp.CreateCheck(
                                  "245b5703-ed55-4c51-b13d-5270f5a69147",
                                  money_amount=8381,
                                  point_amount=7804,
                                  expires_at="2024-10-12T15:20:37.000000+09:00",
                                  usage_limit=6023,
                                  is_onetime=False,
                                  description="fq71I4n67VSf3xPaSaE1umnSPa"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_create_check_13(self):
        response = client.send(pp.CreateCheck(
                                  "245b5703-ed55-4c51-b13d-5270f5a69147",
                                  money_amount=435,
                                  point_amount=7482,
                                  point_expires_at="2017-07-29T21:02:48.000000+09:00",
                                  expires_at="2018-12-03T14:26:46.000000+09:00",
                                  usage_limit=9203,
                                  is_onetime=True,
                                  description="uEiQYwA1D9JQcSOn6XdyrUOcpxNamsoT9liI5q873ybSdSahX1K40W0ROPxqfEYIFDT9WAvqxPARTeZ4STqIcs6otE3FiXZnHxMBMweAmQcKJAC"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_create_check_14(self):
        response = client.send(pp.CreateCheck(
                                  "245b5703-ed55-4c51-b13d-5270f5a69147",
                                  money_amount=4908,
                                  point_amount=1285,
                                  point_expires_in_days=5840,
                                  point_expires_at="2023-11-29T13:29:21.000000+09:00",
                                  expires_at="2025-01-01T01:10:15.000000+09:00",
                                  usage_limit=4166,
                                  is_onetime=False,
                                  description="3jzwtwksGOOXTHGsrqg7h2olciEOrYc1hnmC9xQ3VJeUwhtgjstJLzov89TIfXSmvT2Zqnrp9oOthlDCM5hsead3UYZibE3Bp6VOjcE9hoKR"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_create_check_15(self):
        response = client.send(pp.CreateCheck(
                                  "245b5703-ed55-4c51-b13d-5270f5a69147",
                                  money_amount=8960,
                                  point_amount=6629,
                                  bear_point_account="8453ffcb-b7e2-45ed-b9d4-78da25ebdc73",
                                  point_expires_in_days=9431,
                                  point_expires_at="2024-12-26T15:26:00.000000+09:00",
                                  expires_at="2021-10-25T07:19:12.000000+09:00",
                                  usage_limit=5144,
                                  is_onetime=True,
                                  description="Rq2deXXWqVYHEpyVwnLOLUarSMihK92zy75PnspS1CAKAvf5mnMjS62dZAjoXkD83wKjvB8i48NSqhiJHuc4iyFHXRwiNbNPKAKIqBXO0Ax7dcB2fTrwbYgfU5m13suigzYW7dYJVbZlBBtjssOW8rvOb7TICj4pOxDK"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_create_check_16(self):
        response = client.send(pp.CreateCheck(
                                  "245b5703-ed55-4c51-b13d-5270f5a69147",
                                  point_amount=1456
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_create_check_17(self):
        response = client.send(pp.CreateCheck(
                                  "245b5703-ed55-4c51-b13d-5270f5a69147",
                                  point_amount=8717,
                                  description="b35QoHZMNPRMXk19tOUb2q16BXc9QQFTYjvaM1xgVJWnootStcUCSeh5E4toZnUQl0M0"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_create_check_18(self):
        response = client.send(pp.CreateCheck(
                                  "245b5703-ed55-4c51-b13d-5270f5a69147",
                                  point_amount=3468,
                                  is_onetime=False,
                                  description="XPgtWXgSmF3WygfiR2hlTzHCi49OptYd5bvs1HXPWEa"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_create_check_19(self):
        response = client.send(pp.CreateCheck(
                                  "245b5703-ed55-4c51-b13d-5270f5a69147",
                                  point_amount=2165,
                                  usage_limit=7753,
                                  is_onetime=True,
                                  description="ovhpNQW8N7RkPgBD"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_create_check_20(self):
        response = client.send(pp.CreateCheck(
                                  "245b5703-ed55-4c51-b13d-5270f5a69147",
                                  point_amount=7824,
                                  expires_at="2022-06-01T08:40:46.000000+09:00",
                                  usage_limit=3095,
                                  is_onetime=True,
                                  description="s8t20WgHWiPRYiqZmQxeNiT0egGHjFob23bSaiEnWyEFtkceH3gJln5m41qxC3c0FcnMLqbeQm0bLzsZELRwr7Fr2VGHn33ylZgIDHb6Od5NIhb73Ch8cWcBSedskOC6o8qCOZW03VeOFsFZHapoBX7uGIaEymRIBwo6edlyu4VswLWCEymg5jaD"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_create_check_21(self):
        response = client.send(pp.CreateCheck(
                                  "245b5703-ed55-4c51-b13d-5270f5a69147",
                                  point_amount=4973,
                                  point_expires_at="2021-01-11T09:37:42.000000+09:00",
                                  expires_at="2023-12-05T02:05:48.000000+09:00",
                                  usage_limit=9728,
                                  is_onetime=True,
                                  description="HjOvzqqd7arB75WmMhTq0A0iiUH4uKNfAXWQa9s4v"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_create_check_22(self):
        response = client.send(pp.CreateCheck(
                                  "245b5703-ed55-4c51-b13d-5270f5a69147",
                                  point_amount=3730,
                                  point_expires_in_days=8376,
                                  point_expires_at="2019-02-18T12:07:12.000000+09:00",
                                  expires_at="2016-02-16T00:22:48.000000+09:00",
                                  usage_limit=3325,
                                  is_onetime=True,
                                  description="wMyMpqG1r1Z9eVkDFg3kRCWCyejUZQgKlaATI4u2yhoq84kFIn9pMoUCDrdarLcdLL1Wj5j2DVagU0eKPYLjs1hhLgIQAWCL44AgsgrDMc5Q6kRBFuiLR1d9NcGSe80zNDdiAJyprDILBpWTxzFWKgkRrSuQ8cWFM9qJq0UeYfX3krtJ3J7OgrVnLqRwzOf1l"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_create_check_23(self):
        response = client.send(pp.CreateCheck(
                                  "245b5703-ed55-4c51-b13d-5270f5a69147",
                                  point_amount=3175,
                                  bear_point_account="80659d02-7f03-47fe-8cc5-0ed7d305975e",
                                  point_expires_in_days=7343,
                                  point_expires_at="2023-04-07T00:41:25.000000+09:00",
                                  expires_at="2019-10-28T02:56:55.000000+09:00",
                                  usage_limit=3418,
                                  is_onetime=True,
                                  description="7GSbCFXVfffm4kMFEgipH9lXrhB"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_list_transactions_0(self):
        response = client.send(pp.ListTransactions(
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_list_transactions_1(self):
        response = client.send(pp.ListTransactions(
                                  description="H2BzZFqNWd8R2ykuiV85xXSC3XktepbsZtx5Kn8HpHVGn3Bow7y4VBtXQI55Ev93zNR"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_list_transactions_2(self):
        response = client.send(pp.ListTransactions(
                                  types=[],
                                  description="p7yuQSFA66x39Phgwh2vqXfeCWW08CitBmR2vM3Y2hMdXFNPOMPrKAze3maa0PaKXS6"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_list_transactions_3(self):
        response = client.send(pp.ListTransactions(
                                  is_modified=True,
                                  types=["exchange_inflow"],
                                  description="ecOtWbeKDGlXUF0AOJKn7fABUaMKI8nXa5IzHnI2swHk4qRNpXMRnp2FVcXO8176sd9JsfBnEHimSXL3hSFoGFyw6QRp8mTVhx3CEnjkQFgn4UzcLOzgth9FiHOnK7XMj7lfspS7FU1e6DsidU6CyXQ35hPgxo2LueH6IrlIHNmF6z1nhu"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_list_transactions_4(self):
        response = client.send(pp.ListTransactions(
                                  private_money_id="b9df959e-6e5d-4e76-b7f7-110779051b85",
                                  is_modified=False,
                                  types=["payment", "exchange_inflow", "topup", "exchange_outflow"],
                                  description="kMHmSgQ685w2aDlq9JJFIdX6GaCqF8yIBdfFVPwD1jvn7m4D8wDaQNlvIaf5wZXVvmNyTRGoINePnZ12PYolp7wj5ZYYPC8YlkA2HX"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_list_transactions_5(self):
        response = client.send(pp.ListTransactions(
                                  organization_code="h5---L-4-3-tKi7CgA---",
                                  private_money_id="bbabad8b-3a0c-46c1-b346-ac030bbce979",
                                  is_modified=True,
                                  types=["topup", "exchange_inflow", "exchange_outflow"],
                                  description="ksqA9LwfzRw2QJBlZxY9Gyg3y5Oo5HxjR6OW5LJhSggNkEVr7sLWrtokXhJzJVHnaVVfNzef2wy25Imde2YFr4eFw1UMdsDY6rTVChqOTlOoLBfwMnPDX2roFyESYXi7A91gFGCGN"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_list_transactions_6(self):
        response = client.send(pp.ListTransactions(
                                  transaction_id="a3325ffa-e32e-4e0f-9875-7508e2335caa",
                                  organization_code="-j-7-jKCU-8-RA-1ihyR9-",
                                  private_money_id="7433aea3-6b38-42a0-a94b-ee7331822fd6",
                                  is_modified=True,
                                  types=["topup"],
                                  description="aVc2EjuKe1rgP2CFiTPF1fio9M4fJQr5X4Gm32uSk9NjZ1fwVZlxJ0OXNLhP6Al2nMkpKUpYB8vPZEwxwINYUmbFUXcv9uX4VvUbTnRZhqCj41oFRHbLG"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_list_transactions_7(self):
        response = client.send(pp.ListTransactions(
                                  terminal_id="a7f29241-cc87-4367-9e36-8191c7d0b47f",
                                  transaction_id="bd2702cb-d9d1-49b9-912d-0dcd748b2e50",
                                  organization_code="---Gl40-6wJ4YeM-e1-hYP",
                                  private_money_id="2b9f7aa2-71ee-42c3-8c81-de0dfb777e8c",
                                  is_modified=False,
                                  types=[],
                                  description="yN9ndOLFfLPhRdqUbjmLsm5U"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_list_transactions_8(self):
        response = client.send(pp.ListTransactions(
                                  customer_name="0Qsn760dSnrHO1qpVjBJey5S8au5HrDKxpxcfp",
                                  terminal_id="d71b33c6-6164-446b-a737-7de930a7dd26",
                                  transaction_id="ab6fb218-2298-45cb-86e5-44b6aa76202e",
                                  organization_code="w48p1-ifU-",
                                  private_money_id="e9dd7399-78e7-461b-ba7f-682858b334e2",
                                  is_modified=True,
                                  types=["exchange_inflow", "topup"],
                                  description="LLXSRXovQdjTXsAY7kY6xEw7SkBw0WOr00ybgQeuTsHWNBTzJlE8eqva7lmAovsz2iH5mOoaxBcpYMXTtkaPgdyd6WVSuiXTppY4f0ZtoZQx5xqZPPx4zaNAElLAppgA0NMncYCnu8pKtz63d8HWLigq7bwBoiwf8zpa1EMiGN"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_list_transactions_9(self):
        response = client.send(pp.ListTransactions(
                                  customer_id="16fb43d9-2f3d-4fdb-9642-ba0e73a1dd8b",
                                  customer_name="WsBunmtW0jLSrjjE",
                                  terminal_id="01328cd1-259b-49db-b180-8c128d85fd12",
                                  transaction_id="85c9de6a-afb5-4435-bbbe-a3f31ee3208f",
                                  organization_code="9wB-4-x5l-1wnPoUemMu",
                                  private_money_id="4b492dd3-76f8-4379-90be-df7fdd8bdcc3",
                                  is_modified=False,
                                  types=["exchange_outflow", "topup", "payment", "exchange_inflow"],
                                  description="RyVOLCmJsy74iWUdTusodiT8N1TTU9ezRaSmcqtkYW5D2jytJ60EYyx7sqXwYJMCTnyn4JrK9FuA3S"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_list_transactions_10(self):
        response = client.send(pp.ListTransactions(
                                  shop_id="25baad23-91d2-4c95-876e-2842cdfe33c9",
                                  customer_id="9b0df9e3-c496-44ca-8398-fd3cb313c662",
                                  customer_name="yY5tbGpLfSRJ2DbxC63RtK4pabGiq4vAW1Xg1TObG1EolHMjSla9C8lb6UrGvBnsjYKjS3dDKWhWKoZoRxyyOSBEmSBjhZlCvL4pc7X8aSbl7R2wX6j3d4Ut",
                                  terminal_id="e6dd3a7c-347e-4564-91cd-f5037acc6ce2",
                                  transaction_id="dd00cacd-96f4-4d9a-9881-7e487ec3332d",
                                  organization_code="-1slNI18-259L",
                                  private_money_id="0243b276-94f8-4724-aa56-377453ab2f49",
                                  is_modified=True,
                                  types=["exchange_outflow"],
                                  description="ea6aS1T9AjmZLQXJonJGN8nIN3xViqfGOXbr7se2F4v0aoAjOQUh9Cks4TLNKaAvjBuYAngDlrSNl2RJqD6mMHkE9GD7xIzoEho1yjtGC8wqWHF85TWag7Vq769AdU23d6PKWQfbkKiJegirK1SQEIBR2NsPeDRt7ovKLPzWZFbFOsX6VCPCGZm"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_list_transactions_11(self):
        response = client.send(pp.ListTransactions(
                                  per_page=7988,
                                  shop_id="97905d76-0945-4740-b280-ffa7e8043b22",
                                  customer_id="7ceeea40-bba2-4509-881a-82755f3fa516",
                                  customer_name="bG50aQx9zgicGQ7VtsP3TFIUQ6oJ43xpiiqhVXdZTwXJcGS5xaHI2m1V7Nnd9g3UTtCR80NLdeR8lZzLIGSltvaPLirQAglj0HB2MvZFZHANdlqWK4zVHs4esoSNTlYqHgodp9RdwDfFl7DQ2Ue4Xp6ahmdr8MgLk7OuxGODt1rfGeams0qOANVbtCUtXZbfZ2learIY",
                                  terminal_id="9c090fc9-42fa-429b-ab04-9c54a7317071",
                                  transaction_id="6501b503-8bd9-4c4c-a396-82fe1eedc729",
                                  organization_code="",
                                  private_money_id="bb41946b-9725-4910-8c32-feb3e2a81e5c",
                                  is_modified=True,
                                  types=["exchange_outflow"],
                                  description="lmuUUuAD8xYOSzzR4ZAOqZnV0qzCYNV7"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_list_transactions_12(self):
        response = client.send(pp.ListTransactions(
                                  page=7225,
                                  per_page=5999,
                                  shop_id="ce95507b-69db-4302-a64b-d1db20d4b899",
                                  customer_id="4cd12360-a304-4029-a179-962917cebe58",
                                  customer_name="If5IPrtkR0tKYvEYrGsROPc10b3oiKntkppdaGAFmvrW4N25qK1WewcLiMJteJzv5bJtO4EMGgZlXUWYaFbyzL2gRyaqYydh3L7avjjM1QrBHwgFZB2zLLdeemthz4Xc3H4OmIKteBbShezBdUc6ohwxS07TfY0hnyfVf38XAvsekLRy",
                                  terminal_id="3bd99ae7-e7aa-463b-95b3-a4abb95f9b42",
                                  transaction_id="e12a0202-657f-45cf-b06d-cca2e77a13f9",
                                  organization_code="OCa-m3-9N-L5RC-rlT3--SMEJQ75",
                                  private_money_id="355228f2-c38b-4c83-9563-51a5da685ed1",
                                  is_modified=False,
                                  types=["exchange_inflow", "payment"],
                                  description="7yzXsPkbx077ZfwJUMATptaVLPfggk6SA27zGtI5MRmP1mKDtRA2fbvH7vpVVJQ25rcqd2UFw1y7jv2Y4EwJeMtLmzjCty91sZy95oL0d5Eh1rmZCDmno64Ntc0yHHkdBCYw1UZp"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_list_transactions_13(self):
        response = client.send(pp.ListTransactions(
                                  to="2024-10-30T14:12:48.000000+09:00",
                                  page=8982,
                                  per_page=2662,
                                  shop_id="40f0f585-59fa-4566-83e0-b329f22a3f5f",
                                  customer_id="be560bb6-4098-4405-8300-ccb88da14111",
                                  customer_name="8IzxxCV48ENvKADLNpls",
                                  terminal_id="12dc49f0-34d1-473e-88c1-b64150c17759",
                                  transaction_id="9b7c8f62-2eb0-4c28-9597-f538f53c917b",
                                  organization_code="A-Dg-S6",
                                  private_money_id="0c858dcf-47a3-4870-b86b-8bd6614e51c6",
                                  is_modified=False,
                                  types=["topup"],
                                  description="FOIXeGjOHMGH2LBAb5KxLghC9Z3CF"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_list_transactions_14(self):
        response = client.send(pp.ListTransactions(
                                  from="2018-05-01T11:35:48.000000+09:00",
                                  to="2019-07-25T05:42:06.000000+09:00",
                                  page=1835,
                                  per_page=3684,
                                  shop_id="7caa59ba-cfe0-485a-878b-6b51c681ca8b",
                                  customer_id="fc197a6e-bcb3-4a13-b6fa-9a90382303a0",
                                  customer_name="4K2u30mTfaOJUxFuAiQGBI4u1zv3bjhL4lC910tLHNgg8gQVIls6wvE9yPuQpx3jZHTYGOKlpHDQK8gKBVOMVf0puLoujtB7Uju9bi3g38n35gQu0k2PFayztYsq4E7y",
                                  terminal_id="e6724e18-8bce-404f-9c15-4b4f1dc470de",
                                  transaction_id="c831fd5f-8ae4-4d00-aa9f-468a454497ea",
                                  organization_code="94-r2e0h64779-6",
                                  private_money_id="46a6d350-980e-45cb-b7cc-5fb81dd8d865",
                                  is_modified=True,
                                  types=["exchange_inflow", "topup"],
                                  description="r8GxP2AK7E6vR8Ej4iqm4"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_create_transaction_0(self):
        response = client.send(pp.CreateTransaction(
                                  "c53a09da-370b-4c0e-94f0-e5eb0dec55f6",
                                  "610a8b1b-5825-4db6-9370-da547b946d5f",
                                  "cc8b605d-b42b-4dcc-b83b-d7e57eb171eb"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_create_transaction_1(self):
        response = client.send(pp.CreateTransaction(
                                  "c53a09da-370b-4c0e-94f0-e5eb0dec55f6",
                                  "610a8b1b-5825-4db6-9370-da547b946d5f",
                                  "cc8b605d-b42b-4dcc-b83b-d7e57eb171eb",
                                  description="mqzMegCuDzpGPr2PwUfHgmGmD88qKET6HcmLmB3tANGo1tluoHPRrNqDRwETR9Ay8tYg3HopP7EM48UTXk5GgqJwtXqV5v1vG2PBhVlgD7kPIs2jS54nGEAHVnwg45Su935LzH8DTUp4WWW6UY7PpFxvjdlYUgTyZxZFKhAgdqlzvJUhdKQPGKtlwEhi9IMi"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_create_transaction_2(self):
        response = client.send(pp.CreateTransaction(
                                  "c53a09da-370b-4c0e-94f0-e5eb0dec55f6",
                                  "610a8b1b-5825-4db6-9370-da547b946d5f",
                                  "cc8b605d-b42b-4dcc-b83b-d7e57eb171eb",
                                  point_expires_at="2023-05-23T12:59:00.000000+09:00",
                                  description="g182H3curdraX13VD865JCzFZELvGMqhXqy0tU0AmD9ABhdHLhLgiFBJBq1970do2GmkFpqk7KCx0stpoe2wm2D5JpAIdtql7y46ijNnrLO1Oc6dSYmTrekGbqcEA8R2M64kszyD3xEckCgGTSl6HsfrKUQrSraCoML4zRmr2frclooP0r"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_create_transaction_3(self):
        response = client.send(pp.CreateTransaction(
                                  "c53a09da-370b-4c0e-94f0-e5eb0dec55f6",
                                  "610a8b1b-5825-4db6-9370-da547b946d5f",
                                  "cc8b605d-b42b-4dcc-b83b-d7e57eb171eb",
                                  point_amount=3282,
                                  point_expires_at="2016-04-27T21:15:40.000000+09:00",
                                  description="tESa8OZpHjx4XrAKQxV5419Naf8r2Cw6xz7GTrNQXHSI8Up77UWBXJeUtuF2KDfFCqYpq4WKv8iNLIfpjYqqyE1EITeQ7KaJ9q0Cn7Nc9FfYDlKC9BvkOSlAoyM4DuqvEqhJC7z"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_create_transaction_4(self):
        response = client.send(pp.CreateTransaction(
                                  "c53a09da-370b-4c0e-94f0-e5eb0dec55f6",
                                  "610a8b1b-5825-4db6-9370-da547b946d5f",
                                  "cc8b605d-b42b-4dcc-b83b-d7e57eb171eb",
                                  money_amount=7394,
                                  point_amount=5721,
                                  point_expires_at="2019-06-19T10:21:01.000000+09:00",
                                  description="D9xAXT8UINns0Cm5azwzxX80gHCWywKEBiF7RVE06"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_create_topup_transaction_0(self):
        response = client.send(pp.CreateTopupTransaction(
                                  "9f3bd532-066d-499d-8654-e1155559c478",
                                  "0ea778c8-9acf-4dc5-9677-20affa5061e8",
                                  "fe08fffa-daf4-4b59-b1cf-e6a2dcf8c04a"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_create_topup_transaction_1(self):
        response = client.send(pp.CreateTopupTransaction(
                                  "9f3bd532-066d-499d-8654-e1155559c478",
                                  "0ea778c8-9acf-4dc5-9677-20affa5061e8",
                                  "fe08fffa-daf4-4b59-b1cf-e6a2dcf8c04a",
                                  request_id="73520bab-9d42-44c3-a56d-c3ee7e9f9d70"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_create_topup_transaction_2(self):
        response = client.send(pp.CreateTopupTransaction(
                                  "9f3bd532-066d-499d-8654-e1155559c478",
                                  "0ea778c8-9acf-4dc5-9677-20affa5061e8",
                                  "fe08fffa-daf4-4b59-b1cf-e6a2dcf8c04a",
                                  description="N2OuxA",
                                  request_id="05391e6f-6253-418e-a096-d8c44ba7d436"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_create_topup_transaction_3(self):
        response = client.send(pp.CreateTopupTransaction(
                                  "9f3bd532-066d-499d-8654-e1155559c478",
                                  "0ea778c8-9acf-4dc5-9677-20affa5061e8",
                                  "fe08fffa-daf4-4b59-b1cf-e6a2dcf8c04a",
                                  point_expires_at="2025-03-01T23:33:59.000000+09:00",
                                  description="RJK4PorE13RrbGmvHMp84GYE2nl8RXJ5ZaV3fHi89AEimqXwfX0pApFMOUcq8OKorMUaL5bhIqvL8KkwcWfU8EqpOkvlhs0VKTWqEgBX3yzbhFrW0Il0ZVyiATeYlZFaYzOD5ABK5g0X9STzHTNc1Pa",
                                  request_id="fcb9aabc-7eab-4d44-8a2d-4327404c55c0"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_create_topup_transaction_4(self):
        response = client.send(pp.CreateTopupTransaction(
                                  "9f3bd532-066d-499d-8654-e1155559c478",
                                  "0ea778c8-9acf-4dc5-9677-20affa5061e8",
                                  "fe08fffa-daf4-4b59-b1cf-e6a2dcf8c04a",
                                  point_amount=2440,
                                  point_expires_at="2022-11-09T07:23:31.000000+09:00",
                                  description="J6lq0K5REJB8BnU6sPMTrdJJz6qemvqwecuAlOXdFRd1RfGTiTQpSHuvFVYIKoIfui89ox2WiX1Z1kPcSXAlEmePHxsU43sLxD55tSHe7KUuL7fdu0bgObciVLc8fMTrL6sMb0xnyLdNtY3xUhw",
                                  request_id="6af5cd8f-5a9d-4ddf-a5d7-17c3f360cc46"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_create_topup_transaction_5(self):
        response = client.send(pp.CreateTopupTransaction(
                                  "9f3bd532-066d-499d-8654-e1155559c478",
                                  "0ea778c8-9acf-4dc5-9677-20affa5061e8",
                                  "fe08fffa-daf4-4b59-b1cf-e6a2dcf8c04a",
                                  money_amount=8382,
                                  point_amount=5217,
                                  point_expires_at="2016-05-18T00:54:27.000000+09:00",
                                  description="dyEPMJ1ThTqwf316kvdQ1nsvRncM2xFbcsojHajzbF3o3sHT5TbeGQNRZlO8qNxWkmOB3EVU43veRuVfGFZQkYEqFmndaG0JPtHqWyw9zOZBCdFcH17TGwuEvFY9pQEgttREJqbbOZPYqvzJKgZacadlIDX",
                                  request_id="353182cf-b6bb-44eb-9785-8bf98ac619f3"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_create_topup_transaction_6(self):
        response = client.send(pp.CreateTopupTransaction(
                                  "9f3bd532-066d-499d-8654-e1155559c478",
                                  "0ea778c8-9acf-4dc5-9677-20affa5061e8",
                                  "fe08fffa-daf4-4b59-b1cf-e6a2dcf8c04a",
                                  bear_point_shop_id="7f896446-c5f5-43d4-9b51-c807ba58a90a",
                                  money_amount=6366,
                                  point_amount=5691,
                                  point_expires_at="2023-07-20T02:22:24.000000+09:00",
                                  description="rr5JDrrr27GIF",
                                  request_id="dd02f7e3-347e-4dfe-91e6-b6bef6da0669"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_create_topup_transaction_with_check_0(self):
        response = client.send(pp.CreateTopupTransactionWithCheck(
                                  "599478e2-112d-417b-b951-b0f62d1a1e3f",
                                  "eebc0d1b-27bc-4ec0-a1d6-4eedb54cc9c6"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_create_payment_transaction_0(self):
        response = client.send(pp.CreatePaymentTransaction(
                                  "567d1feb-5649-4170-a8c6-f8c8685a1fa1",
                                  "8e785d3f-3285-4042-85dc-b3d7e3524e15",
                                  "c4bb4a17-caf2-4fc7-bb7c-9f7e8d0f1b04",
                                  704
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_create_payment_transaction_1(self):
        response = client.send(pp.CreatePaymentTransaction(
                                  "567d1feb-5649-4170-a8c6-f8c8685a1fa1",
                                  "8e785d3f-3285-4042-85dc-b3d7e3524e15",
                                  "c4bb4a17-caf2-4fc7-bb7c-9f7e8d0f1b04",
                                  704,
                                  request_id="de1b8253-abde-45f7-ae08-e18c86daf2ff"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_create_payment_transaction_2(self):
        response = client.send(pp.CreatePaymentTransaction(
                                  "567d1feb-5649-4170-a8c6-f8c8685a1fa1",
                                  "8e785d3f-3285-4042-85dc-b3d7e3524e15",
                                  "c4bb4a17-caf2-4fc7-bb7c-9f7e8d0f1b04",
                                  704,
                                  description="I4irHtZO14A0yKK7tQucGD0Ef4PoPlMw5Y2wt2ZD8ecSxWZxIpS7p5XnlNIcddFfQnZRVxmDNsCO4xmsaIbXdTRLBU8SJecy8gmPCoJuWgFssDj2AcfVRuqczBVJ1bpt",
                                  request_id="5dc95075-058c-4bfc-921d-64868c7ff889"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_create_transfer_transaction_0(self):
        response = client.send(pp.CreateTransferTransaction(
                                  "de6f3218-f70f-43b8-a231-e5e1b8f6a4fc",
                                  "1e6245e7-245d-479c-8ea4-fb31e1c16fd6",
                                  "8d5ddb22-43e0-4d78-8911-ff65f1fd3641",
                                  7004
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_create_transfer_transaction_1(self):
        response = client.send(pp.CreateTransferTransaction(
                                  "de6f3218-f70f-43b8-a231-e5e1b8f6a4fc",
                                  "1e6245e7-245d-479c-8ea4-fb31e1c16fd6",
                                  "8d5ddb22-43e0-4d78-8911-ff65f1fd3641",
                                  7004,
                                  request_id="b76b81af-814e-4019-a897-65e331636cec"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_create_transfer_transaction_2(self):
        response = client.send(pp.CreateTransferTransaction(
                                  "de6f3218-f70f-43b8-a231-e5e1b8f6a4fc",
                                  "1e6245e7-245d-479c-8ea4-fb31e1c16fd6",
                                  "8d5ddb22-43e0-4d78-8911-ff65f1fd3641",
                                  7004,
                                  description="MRIUhxs2zLiDB8UncumHCHmJw8IrdTYcWKwZhFMxvKbL6xeMBuLafNx7IlocRmTA6nw4nZ1Zas2qauVZRvIBL7peg5DOr5ODbqTB2rMUGCtR4uqY4UW5WW6RuMX91R5YLvmDKkwARRvsAVhnUuSQARi0tILlSb2osEQoqC8gW1pV5sj2MAIUlPfsc2Pec",
                                  request_id="d57cc3e0-3517-4faa-a296-58ef12e91258"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_create_exchange_transaction_0(self):
        response = client.send(pp.CreateExchangeTransaction(
                                  "682423f9-fae2-49a8-9ba5-f5eef3d0da4f",
                                  "7cdac8a9-3036-4ba9-a79c-d40531ffb6cb",
                                  "74ddf86d-cf60-4df6-aae6-f9f955f481a2",
                                  5219
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_create_exchange_transaction_1(self):
        response = client.send(pp.CreateExchangeTransaction(
                                  "682423f9-fae2-49a8-9ba5-f5eef3d0da4f",
                                  "7cdac8a9-3036-4ba9-a79c-d40531ffb6cb",
                                  "74ddf86d-cf60-4df6-aae6-f9f955f481a2",
                                  5219,
                                  request_id="0c1c33e6-5826-4215-a893-39f88be16612"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_create_exchange_transaction_2(self):
        response = client.send(pp.CreateExchangeTransaction(
                                  "682423f9-fae2-49a8-9ba5-f5eef3d0da4f",
                                  "7cdac8a9-3036-4ba9-a79c-d40531ffb6cb",
                                  "74ddf86d-cf60-4df6-aae6-f9f955f481a2",
                                  5219,
                                  description="U5fMQOc3sGI1R7DpEHhtmNo1GaHu49unPVgvYBY9dKFab2rZiSmKVzl9FBB14AvF0765QxETLp1dwON7RLG2x7s4W0oaohfJ8xkgW2wn65D",
                                  request_id="4eab592f-1454-4eb5-baf4-3ca375500bf9"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_bulk_create_transaction_0(self):
        response = client.send(pp.BulkCreateTransaction(
                                  "WHjq3QPmP",
                                  "D7Fug6lk",
                                  "XlmnxDLsdalSGU9qPouO1RjisDQR5hHmnTiG"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_bulk_create_transaction_1(self):
        response = client.send(pp.BulkCreateTransaction(
                                  "WHjq3QPmP",
                                  "D7Fug6lk",
                                  "XlmnxDLsdalSGU9qPouO1RjisDQR5hHmnTiG",
                                  description="zKKY2Zg2z6FdWJF5zFXKciw1o9fyHcEH"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_get_transaction_0(self):
        response = client.send(pp.GetTransaction(
                                  "69b6beba-f19a-4c47-b262-c71470371f6e"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_refund_transaction_0(self):
        response = client.send(pp.RefundTransaction(
                                  "4c856c4a-f72b-4776-8774-58f4d986e2e0"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_refund_transaction_1(self):
        response = client.send(pp.RefundTransaction(
                                  "4c856c4a-f72b-4776-8774-58f4d986e2e0",
                                  description="AW0XDBBENOovozMaKGLzmaY7ZrzfCha0n1ckUEM"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_list_transfers_0(self):
        response = client.send(pp.ListTransfers(
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_list_transfers_1(self):
        response = client.send(pp.ListTransfers(
                                  description="mSp1QUnJ29jStfN1QeXhG0VXZOFjA6SCy5JOhjAbWk98bT1GyGYOMJFekMhVpjCAz1W1e7E8JN"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_list_transfers_2(self):
        response = client.send(pp.ListTransfers(
                                  transfer_types=["coupon", "payment", "topup", "transfer", "exchange", "campaign"],
                                  description="yI8CmT3Q1JbIBpC3e0nIRZq9qpVwi2g2E4N6lRLyitMU7lkc"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_list_transfers_3(self):
        response = client.send(pp.ListTransfers(
                                  transaction_types=["transfer"],
                                  transfer_types=["payment", "transfer", "coupon", "topup", "exchange", "campaign"],
                                  description="crbvP1EtVB53dFKQosVxOckP8ReV4JEhS0ayOqAen0vOKu6w4UmGzKnBI8QGbZX15HrEEV1"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_list_transfers_4(self):
        response = client.send(pp.ListTransfers(
                                  is_modified=True,
                                  transaction_types=[],
                                  transfer_types=["exchange", "campaign", "transfer", "payment", "topup"],
                                  description="fBQUy2ilYKmfsw6wEcodI057MvNfP3D395CDAgSfxePDxEsFWs2N0CRTKF3gdyHCkhhRGZGXqMBJLHWk6gvKOrBBRrZInpGdsfwBqYjBitQlNhL3kgsmo6KN5LUUt45Y8J9bBYlYUKVYmcr"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_list_transfers_5(self):
        response = client.send(pp.ListTransfers(
                                  private_money_id="7c6c91ca-f97a-4078-8bad-1ecd0163ad4f",
                                  is_modified=True,
                                  transaction_types=["transfer", "topup", "payment", "exchange"],
                                  transfer_types=[],
                                  description="ozmM7PI"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_list_transfers_6(self):
        response = client.send(pp.ListTransfers(
                                  transaction_id="04ecd602-e820-4e09-b377-6b12842ace07",
                                  private_money_id="f1456746-eeb7-4704-a5d5-6cc857985af6",
                                  is_modified=True,
                                  transaction_types=["transfer", "payment", "topup"],
                                  transfer_types=["campaign"],
                                  description="D79jFeGw1YPpHIDKOzfPcc6EtnnayySL"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_list_transfers_7(self):
        response = client.send(pp.ListTransfers(
                                  customer_name="287yIKWAjvDqnhesm4a",
                                  transaction_id="3fc5bbdd-5551-46c2-8d48-b97d8a0e7ea9",
                                  private_money_id="4cacf5d3-c508-4423-a40e-92ed4fd4f656",
                                  is_modified=False,
                                  transaction_types=["topup"],
                                  transfer_types=["coupon", "payment", "topup"],
                                  description="3ItanxFs9H26p7PlJjO8pQcd7NQ3o7HqbdcdslULpkT0jFpuCPWiEuAU3WGq8HCeDlDeS4v5tOHTV8xfoGdcltO08eDZBA"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_list_transfers_8(self):
        response = client.send(pp.ListTransfers(
                                  customer_id="dae989c4-c3bd-42d6-b9dd-15741d1c5b28",
                                  customer_name="7K2aaPOMbrJNQYKqvqaBzaVsWy0A1TK6isbfsluGigMgn3ngwPyWj0m4HhoYJPvHKs4vudSOlNrp55oCignn72q589moUcEwPHgQkwpsb0oCHdT5mkSZdmbh0pgGnMz7orP0dvX5uNC1NO12ypzaeefUddBLEbSIoAtWd7bMS3DLYVeJBZOspEV30543ULeXqhWGM9Gwir4eCIseVssSpSGkZGPjzugNPJGvlAPd7MbJsi",
                                  transaction_id="8d5a1c2a-99c6-4216-9ccb-e644681ea9fa",
                                  private_money_id="fee28c5d-695d-4e0e-bfde-af9540f24037",
                                  is_modified=False,
                                  transaction_types=["exchange", "transfer"],
                                  transfer_types=["topup", "coupon", "campaign", "payment", "exchange", "transfer"],
                                  description="R9Po3IuF1pOg7RAoiSZOlg7iu5F4V7zV13HhYx87s4HZaRM9nzNxhhnl7mJ8NL0vJO2kyVnN6m5wTbtz1fvNOud0acLILyCHsShvzPaZdE"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_list_transfers_9(self):
        response = client.send(pp.ListTransfers(
                                  shop_name="ksl1Cu",
                                  customer_id="bb34ec5a-d890-4e30-af90-4722db9655b6",
                                  customer_name="WpNPtyuULH0NuVEgXeNcKVIhhhjdP1p7zAYL0FRUkDCjDZ1SfjzoxTjSkP9tgamYnvvCmcHB2f7CmwDFuOCuQMq46WolJUjYBaJZ4OOhGmGizZrQ47kjHHQ4ujk1aqrVJag68L1pQd5fgCdlj7EMkPdyxvgRZgMtqOiw7h8QQSHtKiGMBiB0Bz8EzKQPwvWa7LJNtrK5Fv6igwWrRPmhSk4xNrZbz1P84vHR3",
                                  transaction_id="33a4895a-b299-4943-bf2b-a4334ccc6b4e",
                                  private_money_id="bcd5628a-5701-439b-b748-a37646d253cb",
                                  is_modified=True,
                                  transaction_types=["transfer", "topup", "payment"],
                                  transfer_types=["campaign", "exchange", "topup", "payment"],
                                  description="aA9sm25rEHRZeuTkOv7A29iKXrpRnJCpvIiNrCxM94RzzXfgOwN7IqPbhZtR3HcXe5PqRHMD12fJZlU2IztXbc4erIuMfZNvETENBHPy5GnaLgptSi9Plt7HugRRvWf0AlZtDlsf7fEQynbcH9OBFw7Ne"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_list_transfers_10(self):
        response = client.send(pp.ListTransfers(
                                  shop_id="66e5e598-2d10-45a6-8f24-9da2da6accd5",
                                  shop_name="0Y0wbjh8TtuCW8r53uDNdLUZPYoMr9F7BehkYeNyzix8oEe7tEsqzR6Bdj2NPlqCbqFj7Ew8fNE46UaGdN4ewRXa7agErhAxdMEIRoUDyyvrACP7IORua6xBdfdOSBzTVoRCop2Rbkm4",
                                  customer_id="71446589-873d-4c05-a086-02f580a5a7fa",
                                  customer_name="2lAWmpO2166SV5MAzLpxMyIwGBCC4ryyT5J0KZWUjEvyv9Kng2FvuEFs2R4iqP5YJFsAlpP7ZVGIQFjRX2WinV5xJMcMzIF4UuT89SYgjMr27MmJBj2k7D0L0Mh3gbyc6Sn7rEAcU6BbQN05tx43dOIeFs4jhdpcmY1Q",
                                  transaction_id="cd52d0aa-018d-4b36-85f3-a35fd8bb8c3f",
                                  private_money_id="c516b0cf-340e-4e10-8c15-d0fa66805528",
                                  is_modified=False,
                                  transaction_types=["transfer", "payment"],
                                  transfer_types=["coupon", "topup"],
                                  description="l2gZZabNDvibYUl8rT0qGgNlNnCJRkrpCMKUObTnUvoOfaYn7SBWEnShATuBwDMx2i35hlO3p73deYKTcVkUK8FR0BdBqk6PZbeLJaeXKK60eGNFeoYYMC3PRzxjEQJs9oGpHSaO8ylZvR684IU7oUD9IQcxhmZK29jSjKALlA0I7UqtmkpVpYqaZwK3o1kxcyZ"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_list_transfers_11(self):
        response = client.send(pp.ListTransfers(
                                  per_page=1573,
                                  shop_id="a1af27cc-ac1b-46e7-aa1e-52926127abde",
                                  shop_name="kh6thJZ3f9xkkWQrJnN5KIl9DD0wR9FH5lNa7faCdxKp",
                                  customer_id="1a3038c6-8afd-4458-b0cb-5ede2928ea16",
                                  customer_name="5aEz9WOK3wOCneBcGr9s2u3Ax4i65l6MRromXb4v07kwBYdAUW2CirxLfa4zRFm2vC7hclwz3cfnREalBi1iT97GLC2XeInumqgHfOkUCZuE4qaa542To6U2Swu8o1SDrxuqQekFs702TZO9Z8UoP7yp0621qo7tvCJfbcJcvRtgyFxFpOmCZTu7xuo9KBhZBCcsXUAlzBwTI4dl4IksDc3QgutEGU43kLwiy7WIu6Kiyj33i8f3MGMVykOmhZm",
                                  transaction_id="ee54b849-4297-4f48-92ec-1d24deb8b159",
                                  private_money_id="9ce43146-936f-4e69-8419-4851a03527a4",
                                  is_modified=True,
                                  transaction_types=[],
                                  transfer_types=["campaign", "topup", "exchange"],
                                  description="NFmQvPrama0Zj75cQU4K0T2bcHNcO2Gr5QPCs"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_list_transfers_12(self):
        response = client.send(pp.ListTransfers(
                                  page=6640,
                                  per_page=2379,
                                  shop_id="b134bc0b-081d-4549-b004-e8ca0c4c9a3d",
                                  shop_name="z45CexEvuVBIYaRzizA11tF0lrmRGiLqzpKh69nBi6QM19YrFpqeEUmISPEDxjYBShVYiX9tTfAvCW4qAJhD3UalwlHxti6F1",
                                  customer_id="1b7ab228-195a-4878-950a-f85f90fda6bc",
                                  customer_name="myXOe0GrKmKnTaOTn6s8ZSwH7gcj5xfZNFCjGfOSfIZH4ZrwHbFd0Z1y92ieh43oSsMPxmGn6Rdno2jYiFF3CvyeXT7BQbAq9E4OVfxNWHbyY0GVXccPCE1PyiEzq49ShuObsRkBFg5Q1xEYRsViQo38lXO4GvfDhq3a1TT5MBf0bWykxj",
                                  transaction_id="e926b75e-e3a3-4a40-8d2b-095394edf866",
                                  private_money_id="7930c20a-ff47-499e-83a5-0b75d731774f",
                                  is_modified=False,
                                  transaction_types=["exchange"],
                                  transfer_types=["topup", "coupon", "payment", "exchange", "campaign", "transfer"],
                                  description="PacHp6Z00KHqRYx1svz9x5sVql0vKVzyGYk2VMu4B14mWrqd6RUHOOkLP4FkjZoAyggMT5dPL6cvbrIrTr"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_list_transfers_13(self):
        response = client.send(pp.ListTransfers(
                                  to="2024-02-07T21:23:52.000000+09:00",
                                  page=5729,
                                  per_page=6325,
                                  shop_id="447271a5-d45d-457f-a485-c112f4c0a5ed",
                                  shop_name="ltRf1GifKqwHidJGrRbdiSfMHVvqnZzXeMdX9moVEdLsawnxjlksOwH2hRrLBnyL5i51HEBEd00tPpEqhoHneVxNsIS9xq91n2lV9tYZb1lfa1eDgbjjevPvO01fm81VoDebTS2OjZDxkd1G9MhKmX4OKEOWqz0hvycb0vlIqYLwmEttbmi9Qno8w65LUyJS",
                                  customer_id="d17d5410-5e34-4ced-9270-7a9ada525ced",
                                  customer_name="pP7N2X0cyPYRC0Z6ONIHi6uoKCHOuzolcuIOKeSSY5X9b8h3wAjLQjaXu716ByS80FCJOb4a1hzIWs15q8PTemYYJLa2jDGV65WBVJFowkHWzNOsRYgAGRzBb7t83FzpKCClfPtkWjGORkLabglmDLLQWFWTlVEAyNxIULLGGTMxvMCx2cqBlbrZHO9iCu90DxVQnbrqJ1u870fgvmvI18bxjhN7vwIrE2narfuY3CLMoUqdXStY",
                                  transaction_id="3f7fcd85-dfb4-47e4-a485-996a250252c2",
                                  private_money_id="d1cd325c-4945-4cd3-882c-a64b510f28af",
                                  is_modified=False,
                                  transaction_types=["exchange", "transfer", "topup", "payment"],
                                  transfer_types=[],
                                  description="apbEZnaTZohN6JjdwzN7i41itVu8FxDdlBwgH4BAhmYKDxRqPptC95kmcGUfuUWaOzoPzcQM2WatXV7xTUK2ks1X2cRzN6D0AIcT9LHmOpcY9Nzm7FD3jIBhHbU4d4b46EeseFuSKqhG9cRRLqAFCe5"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_list_transfers_14(self):
        response = client.send(pp.ListTransfers(
                                  from="2021-04-12T23:13:46.000000+09:00",
                                  to="2016-10-22T16:42:35.000000+09:00",
                                  page=502,
                                  per_page=2162,
                                  shop_id="1b958ab1-446a-436a-9b74-a1afe67e7fd3",
                                  shop_name="zLswMnaGivTrPjkRVQiSQwCu565IkQre",
                                  customer_id="b41038cd-a492-46b8-b34c-1ea52ed5a7c9",
                                  customer_name="CQhj4X2N0ZIukrvuTStRoFwCveSSuwpcW6UT0kic0BFDRMMzvFyE7SIRQ8iftX23hz2jywDrsWFKDNW2JwesyIWGxCVMarN4hY2hcJsTKgPjyhBG5BoFEx4L0ovkP4UflN58Crdo31ZIF0wE6Hv1sV6CIlZtHj16903KqziLhKTnGbb5yr03PiDugdjsxpeUU8q2GbfuRtxzVqYbgoZMFzuS2DiB4wJ0f0JnNfx7vIl96JvJrDjKTxvW",
                                  transaction_id="eabfced1-a7a3-42b1-9ef4-122974574524",
                                  private_money_id="aa7add2c-b739-4475-951b-90ce026f8be3",
                                  is_modified=True,
                                  transaction_types=["exchange", "payment", "topup"],
                                  transfer_types=["payment", "transfer", "campaign", "topup"],
                                  description="hZqVFsvvnuBi1lg"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_create_organization_0(self):
        response = client.send(pp.CreateOrganization(
                                  "zWyBC0PD2AvcFVB2jY",
                                  "xmyPg3P98zjb9n1lIfOaOTxiW7Qm37b5BFHSSEFoOIFwueZXLQbecJPPWpDIB6bM4cBQFaXLVuILYeOdooCw66P8UtNGw0V4qGeZ2XKQV8u3zmgdNbMOzd5qIHdvWfQavjUjbDeIbQ0rYRN8DgbWit0DFcpbPUzmbWlUqumIhJ4btZAQHbEiP",
                                  ["6a7b4395-f787-4063-8458-7bd8a7c2523f", "77d8a884-3ff6-47e4-8c95-fdadfece47e9", "c1a9bc45-308c-4191-8170-10f35f45eb84", "7ca6e036-a2bb-461a-b369-ef2cde05adf2", "f660f36a-c12a-4f7c-a12b-da58d9e6ca26", "bca53541-92d1-4657-af92-47c337d89969", "256818ca-84bf-48b6-9504-f4e567ba1d6b", "831638d2-9c0f-45ae-9b81-493a3c0a0a5c", "27694902-a781-41b9-bd08-bfe025eed89d"],
                                  "rWdRmOTvbQ@HHyw.com",
                                  "mIAPrWKijA@Tvko.com"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_create_organization_1(self):
        response = client.send(pp.CreateOrganization(
                                  "zWyBC0PD2AvcFVB2jY",
                                  "xmyPg3P98zjb9n1lIfOaOTxiW7Qm37b5BFHSSEFoOIFwueZXLQbecJPPWpDIB6bM4cBQFaXLVuILYeOdooCw66P8UtNGw0V4qGeZ2XKQV8u3zmgdNbMOzd5qIHdvWfQavjUjbDeIbQ0rYRN8DgbWit0DFcpbPUzmbWlUqumIhJ4btZAQHbEiP",
                                  ["6a7b4395-f787-4063-8458-7bd8a7c2523f", "77d8a884-3ff6-47e4-8c95-fdadfece47e9", "c1a9bc45-308c-4191-8170-10f35f45eb84", "7ca6e036-a2bb-461a-b369-ef2cde05adf2", "f660f36a-c12a-4f7c-a12b-da58d9e6ca26", "bca53541-92d1-4657-af92-47c337d89969", "256818ca-84bf-48b6-9504-f4e567ba1d6b", "831638d2-9c0f-45ae-9b81-493a3c0a0a5c", "27694902-a781-41b9-bd08-bfe025eed89d"],
                                  "rWdRmOTvbQ@HHyw.com",
                                  "mIAPrWKijA@Tvko.com",
                                  contact_name="Pes7Qjlt5CT2vxN1Mc63xCxHHoag84NZcV6OTT1CGMcUUWUYieS3zx166C1To8pxBYFY1F9kfMMzaGddFL27h"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_create_organization_2(self):
        response = client.send(pp.CreateOrganization(
                                  "zWyBC0PD2AvcFVB2jY",
                                  "xmyPg3P98zjb9n1lIfOaOTxiW7Qm37b5BFHSSEFoOIFwueZXLQbecJPPWpDIB6bM4cBQFaXLVuILYeOdooCw66P8UtNGw0V4qGeZ2XKQV8u3zmgdNbMOzd5qIHdvWfQavjUjbDeIbQ0rYRN8DgbWit0DFcpbPUzmbWlUqumIhJ4btZAQHbEiP",
                                  ["6a7b4395-f787-4063-8458-7bd8a7c2523f", "77d8a884-3ff6-47e4-8c95-fdadfece47e9", "c1a9bc45-308c-4191-8170-10f35f45eb84", "7ca6e036-a2bb-461a-b369-ef2cde05adf2", "f660f36a-c12a-4f7c-a12b-da58d9e6ca26", "bca53541-92d1-4657-af92-47c337d89969", "256818ca-84bf-48b6-9504-f4e567ba1d6b", "831638d2-9c0f-45ae-9b81-493a3c0a0a5c", "27694902-a781-41b9-bd08-bfe025eed89d"],
                                  "rWdRmOTvbQ@HHyw.com",
                                  "mIAPrWKijA@Tvko.com",
                                  bank_account_holder_name="ﾙ",
                                  contact_name="0zsisTrvvGgZflcmtn59KTkyjXtKUPjFI8y9xNMflpCeHxN7YVPA89xyiq9rIUzgAtRLfWzYbpPNWpjUr2lt5aRVkY"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_create_organization_3(self):
        response = client.send(pp.CreateOrganization(
                                  "zWyBC0PD2AvcFVB2jY",
                                  "xmyPg3P98zjb9n1lIfOaOTxiW7Qm37b5BFHSSEFoOIFwueZXLQbecJPPWpDIB6bM4cBQFaXLVuILYeOdooCw66P8UtNGw0V4qGeZ2XKQV8u3zmgdNbMOzd5qIHdvWfQavjUjbDeIbQ0rYRN8DgbWit0DFcpbPUzmbWlUqumIhJ4btZAQHbEiP",
                                  ["6a7b4395-f787-4063-8458-7bd8a7c2523f", "77d8a884-3ff6-47e4-8c95-fdadfece47e9", "c1a9bc45-308c-4191-8170-10f35f45eb84", "7ca6e036-a2bb-461a-b369-ef2cde05adf2", "f660f36a-c12a-4f7c-a12b-da58d9e6ca26", "bca53541-92d1-4657-af92-47c337d89969", "256818ca-84bf-48b6-9504-f4e567ba1d6b", "831638d2-9c0f-45ae-9b81-493a3c0a0a5c", "27694902-a781-41b9-bd08-bfe025eed89d"],
                                  "rWdRmOTvbQ@HHyw.com",
                                  "mIAPrWKijA@Tvko.com",
                                  bank_account="577077",
                                  bank_account_holder_name="｣",
                                  contact_name="xULJj0MCjQoOwWZmQHAQqAUFQSaz170unrxZEFrcBNvId6xlGxoWCCUY1xga47H"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_create_organization_4(self):
        response = client.send(pp.CreateOrganization(
                                  "zWyBC0PD2AvcFVB2jY",
                                  "xmyPg3P98zjb9n1lIfOaOTxiW7Qm37b5BFHSSEFoOIFwueZXLQbecJPPWpDIB6bM4cBQFaXLVuILYeOdooCw66P8UtNGw0V4qGeZ2XKQV8u3zmgdNbMOzd5qIHdvWfQavjUjbDeIbQ0rYRN8DgbWit0DFcpbPUzmbWlUqumIhJ4btZAQHbEiP",
                                  ["6a7b4395-f787-4063-8458-7bd8a7c2523f", "77d8a884-3ff6-47e4-8c95-fdadfece47e9", "c1a9bc45-308c-4191-8170-10f35f45eb84", "7ca6e036-a2bb-461a-b369-ef2cde05adf2", "f660f36a-c12a-4f7c-a12b-da58d9e6ca26", "bca53541-92d1-4657-af92-47c337d89969", "256818ca-84bf-48b6-9504-f4e567ba1d6b", "831638d2-9c0f-45ae-9b81-493a3c0a0a5c", "27694902-a781-41b9-bd08-bfe025eed89d"],
                                  "rWdRmOTvbQ@HHyw.com",
                                  "mIAPrWKijA@Tvko.com",
                                  bank_account_type="saving",
                                  bank_account="",
                                  bank_account_holder_name=",",
                                  contact_name="5smi6ZOVs4acD9rVhcg23xCEFkLSS5hbwBSU0giTkxdUxD9igIZgzVBJR17y2sfA25FYEFWrTh8Mab8ddltw30e4SOVYmckTyHBGdh2ncuUAUv5uljcYpsOO2Qr9Ihkm7wM77qFZYBr7N1qyCMdedP9erYqZjfzT2I41SOBl8TzqNAAAujRgZ1o"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_create_organization_5(self):
        response = client.send(pp.CreateOrganization(
                                  "zWyBC0PD2AvcFVB2jY",
                                  "xmyPg3P98zjb9n1lIfOaOTxiW7Qm37b5BFHSSEFoOIFwueZXLQbecJPPWpDIB6bM4cBQFaXLVuILYeOdooCw66P8UtNGw0V4qGeZ2XKQV8u3zmgdNbMOzd5qIHdvWfQavjUjbDeIbQ0rYRN8DgbWit0DFcpbPUzmbWlUqumIhJ4btZAQHbEiP",
                                  ["6a7b4395-f787-4063-8458-7bd8a7c2523f", "77d8a884-3ff6-47e4-8c95-fdadfece47e9", "c1a9bc45-308c-4191-8170-10f35f45eb84", "7ca6e036-a2bb-461a-b369-ef2cde05adf2", "f660f36a-c12a-4f7c-a12b-da58d9e6ca26", "bca53541-92d1-4657-af92-47c337d89969", "256818ca-84bf-48b6-9504-f4e567ba1d6b", "831638d2-9c0f-45ae-9b81-493a3c0a0a5c", "27694902-a781-41b9-bd08-bfe025eed89d"],
                                  "rWdRmOTvbQ@HHyw.com",
                                  "mIAPrWKijA@Tvko.com",
                                  bank_branch_code="",
                                  bank_account_type="saving",
                                  bank_account="48654",
                                  bank_account_holder_name="8",
                                  contact_name="CsUWnWLJ2ZayZD0M6cS0CJw1vTUQNFb84hugvGUooZcQVTmwSs3xrPvTFtnXj9MgooihLhG9gIeLfixIJdqF6iVZMlnVia6KMAVTweSWrbkDAKb6ux40NJ1m8ZDPBGCcT6lNdw0WHwFn0kj9SvXe8eJpBi2oFfS3bPkKy2PDmf5IM14bE1XEjBH36SFei5vvzq9vUKj6fpcputjuV7MqE5ob6lnRwvxep9h4CXuzBIQs"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_create_organization_6(self):
        response = client.send(pp.CreateOrganization(
                                  "zWyBC0PD2AvcFVB2jY",
                                  "xmyPg3P98zjb9n1lIfOaOTxiW7Qm37b5BFHSSEFoOIFwueZXLQbecJPPWpDIB6bM4cBQFaXLVuILYeOdooCw66P8UtNGw0V4qGeZ2XKQV8u3zmgdNbMOzd5qIHdvWfQavjUjbDeIbQ0rYRN8DgbWit0DFcpbPUzmbWlUqumIhJ4btZAQHbEiP",
                                  ["6a7b4395-f787-4063-8458-7bd8a7c2523f", "77d8a884-3ff6-47e4-8c95-fdadfece47e9", "c1a9bc45-308c-4191-8170-10f35f45eb84", "7ca6e036-a2bb-461a-b369-ef2cde05adf2", "f660f36a-c12a-4f7c-a12b-da58d9e6ca26", "bca53541-92d1-4657-af92-47c337d89969", "256818ca-84bf-48b6-9504-f4e567ba1d6b", "831638d2-9c0f-45ae-9b81-493a3c0a0a5c", "27694902-a781-41b9-bd08-bfe025eed89d"],
                                  "rWdRmOTvbQ@HHyw.com",
                                  "mIAPrWKijA@Tvko.com",
                                  bank_branch_name="S5xi",
                                  bank_branch_code="262",
                                  bank_account_type="current",
                                  bank_account="07821",
                                  bank_account_holder_name="｣",
                                  contact_name="VOK8UdOrqP9JScC9N"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_create_organization_7(self):
        response = client.send(pp.CreateOrganization(
                                  "zWyBC0PD2AvcFVB2jY",
                                  "xmyPg3P98zjb9n1lIfOaOTxiW7Qm37b5BFHSSEFoOIFwueZXLQbecJPPWpDIB6bM4cBQFaXLVuILYeOdooCw66P8UtNGw0V4qGeZ2XKQV8u3zmgdNbMOzd5qIHdvWfQavjUjbDeIbQ0rYRN8DgbWit0DFcpbPUzmbWlUqumIhJ4btZAQHbEiP",
                                  ["6a7b4395-f787-4063-8458-7bd8a7c2523f", "77d8a884-3ff6-47e4-8c95-fdadfece47e9", "c1a9bc45-308c-4191-8170-10f35f45eb84", "7ca6e036-a2bb-461a-b369-ef2cde05adf2", "f660f36a-c12a-4f7c-a12b-da58d9e6ca26", "bca53541-92d1-4657-af92-47c337d89969", "256818ca-84bf-48b6-9504-f4e567ba1d6b", "831638d2-9c0f-45ae-9b81-493a3c0a0a5c", "27694902-a781-41b9-bd08-bfe025eed89d"],
                                  "rWdRmOTvbQ@HHyw.com",
                                  "mIAPrWKijA@Tvko.com",
                                  bank_code="1982",
                                  bank_branch_name="WnSkwF3ndWBYhpFAFEM2EcP8sCTaxhkC",
                                  bank_branch_code="",
                                  bank_account_type="current",
                                  bank_account="",
                                  bank_account_holder_name="L",
                                  contact_name="LCxRx93B2VonJvizlGgA1QRsiEPanBYjR6tfda9soo2HvWIfUUbBHI7AvQzQc38veTxZF6X94844JzEqHSu8pmMFuUYCPXNBFk3DnX9T6AyYCCuD6ckkyHHbXke7PbHzwZohyPlBu0N2FiSFv27bcOIuVtVVhHAKppIIwJUtAJXbvaYU36irYgOn7jt5eb74Ulf8a1YNLmFi1kErB1nLRlpi0oaQD67cBN1lCsJIPs39YUTk7"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_create_organization_8(self):
        response = client.send(pp.CreateOrganization(
                                  "zWyBC0PD2AvcFVB2jY",
                                  "xmyPg3P98zjb9n1lIfOaOTxiW7Qm37b5BFHSSEFoOIFwueZXLQbecJPPWpDIB6bM4cBQFaXLVuILYeOdooCw66P8UtNGw0V4qGeZ2XKQV8u3zmgdNbMOzd5qIHdvWfQavjUjbDeIbQ0rYRN8DgbWit0DFcpbPUzmbWlUqumIhJ4btZAQHbEiP",
                                  ["6a7b4395-f787-4063-8458-7bd8a7c2523f", "77d8a884-3ff6-47e4-8c95-fdadfece47e9", "c1a9bc45-308c-4191-8170-10f35f45eb84", "7ca6e036-a2bb-461a-b369-ef2cde05adf2", "f660f36a-c12a-4f7c-a12b-da58d9e6ca26", "bca53541-92d1-4657-af92-47c337d89969", "256818ca-84bf-48b6-9504-f4e567ba1d6b", "831638d2-9c0f-45ae-9b81-493a3c0a0a5c", "27694902-a781-41b9-bd08-bfe025eed89d"],
                                  "rWdRmOTvbQ@HHyw.com",
                                  "mIAPrWKijA@Tvko.com",
                                  bank_name="A2FswOlWKdKIosORHhIHai7akUcG0YH43wHVjKzTtjYHHIw",
                                  bank_code="4960",
                                  bank_branch_name="lNmnqaLeXljkBPYyvU6MSxfkJDXTiNobaHzqHKZgv4zy7I9",
                                  bank_branch_code="950",
                                  bank_account_type="saving",
                                  bank_account="2",
                                  bank_account_holder_name="ｦ",
                                  contact_name="zeqqlWXrGhqj65QBIk9HoKj2aM74dH5PXoyQ7YDmmOunaGreHFrtH"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_list_shops_0(self):
        response = client.send(pp.ListShops(
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_list_shops_1(self):
        response = client.send(pp.ListShops(
                                  per_page=8808
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_list_shops_2(self):
        response = client.send(pp.ListShops(
                                  page=7622,
                                  per_page=3783
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_list_shops_3(self):
        response = client.send(pp.ListShops(
                                  external_id="oJSXsSVbiCqVa",
                                  page=9367,
                                  per_page=7876
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_list_shops_4(self):
        response = client.send(pp.ListShops(
                                  email="ylxMS1ckdk@oKA8.com",
                                  external_id="FP9",
                                  page=5406,
                                  per_page=7288
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_list_shops_5(self):
        response = client.send(pp.ListShops(
                                  tel="08055524",
                                  email="5Sno1MfV2Z@THEr.com",
                                  external_id="XThRJWW9CWX7Br7RdzBu02VqA1VGv",
                                  page=4104,
                                  per_page=3576
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_list_shops_6(self):
        response = client.send(pp.ListShops(
                                  address="nFwTQH3yt30VxPVKxlvxlLWhshFLEcqOVbM0yXCE2Y3QA3n5SuoaUgl7nFSyuMYZqUnSi1tkvQJEMALYcrNdRTOKFgd2aESpzvkdOxIVxpCplODQBxaruw4DyqCH04bMw8v843D",
                                  tel="015559811",
                                  email="vwUedix2DI@g7sH.com",
                                  external_id="8JYE7WXVc16ZpnUtGL57zq0Nd0MqNiLL2vfP",
                                  page=3868,
                                  per_page=329
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_list_shops_7(self):
        response = client.send(pp.ListShops(
                                  postal_code="5312262",
                                  address="2QiAEydmFG1sK7lqS8CKIWAivgjSpU1xJrnjEdJg9PZuB4sImIfh9dLWttS5qXjZ32qi02R82uph1ea6aAreMlAZMi13aaG3ECV5zRCJZqa4e8hSJ2QmdpxE8IEkmo9hXYmbprW43HjQng1oQCNrKju4sUSzhsmVpmmPGJPFaihFLb2zGVALDkSVdBSME8AUYgSPOCJHPaODEjPhPvR8",
                                  tel="03600-524",
                                  email="3tm5eRoLWd@9BOu.com",
                                  external_id="S39FHBSV1vNnU85",
                                  page=8684,
                                  per_page=9351
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_list_shops_8(self):
        response = client.send(pp.ListShops(
                                  name="cg9i9SyhQ1s0tofMiJ3nSjkJyHjBvvGaqdJOnF06DKEAIQIsCtjEeXeNsKXfsW6P3XDMEf7A31qQBQ3n3AokGB1Cu4xajnrQWbonoIilNoXrdPbVrYs24eYCH8w7PFjnM",
                                  postal_code="380-6159",
                                  address="isOQ19GiEVVU2w0ghUkdrKCNI682j4ryuS80DiHJxGucypgFLoS8YisfUhL2isxeEjRWmFXI2DLk59B7q8siZ",
                                  tel="05104-8361",
                                  email="qQOcAoVYYM@t6a2.com",
                                  external_id="dABd6khCYgGphGnMcxAFxLEynuG1MYJZ",
                                  page=5375,
                                  per_page=3
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_list_shops_9(self):
        response = client.send(pp.ListShops(
                                  private_money_id="e53af0d3-71b1-4dbf-aa53-a8dc349dd7ea",
                                  name="s43y0J63vPIMx2xx3Kwql9mtC9ZCRSwx8Ca2qTeBkLLR2NwXBIpRa9NREZu8MGzAwqQPRxjsJG7IMkx5VkMi18NxE1t4XgCShRarB1H08xh2te5RVaAn24SnOVV647k4Easiy8fWcyXmX9yIg8hXUcc4uDEeOzK8",
                                  postal_code="8078630",
                                  address="xKIWaxMIYC9acZkUJF1WCgz6Wdp7Kk0TlZeO2FNydf0GtYjfDoNZFzEdLw42Hb0pSrX6DBYgQSlYrNVlmjvxZD2Vl2",
                                  tel="077-470922",
                                  email="fmT4GfMO1j@nHi6.com",
                                  external_id="ZuuJlJQBET",
                                  page=391,
                                  per_page=7813
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_list_shops_10(self):
        response = client.send(pp.ListShops(
                                  organization_code="-m",
                                  private_money_id="dab92f46-7816-425e-811a-c36a71f5e663",
                                  name="gVUyu1cS1FOdRPCJb5qbGoNyDAVPbYlYwDgUmVf4VyeCq2zv3m8EEJTtegfLPAKZKPgTBuuzmE82FXQId8b7y1pRWueZ0KeUazMXVvOufuSQG5JXrcr1smXBGt9nL7odm1v5XmnnOoYTpQrqT1a8MpDWEaz1NRm7Qy2OfT4tQ4wMMqx0T",
                                  postal_code="993-1176",
                                  address="OsINpkgU",
                                  tel="057-7594-570",
                                  email="Ku4zT64GLB@lkks.com",
                                  external_id="i12lUDdOmpyVlJwONKN8r89J44UVQkLOCkwb",
                                  page=9936,
                                  per_page=2172
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_create_shop_0(self):
        response = client.send(pp.CreateShop(
                                  "KCbVOJr6xvttsoAm4jxkZlaPGnC9YJFp6p0zRrU0lCGV3Uq4HmqHawkKDCgeNO0rz37QmQFa7JuoJnfFva5D9Js4SpYvByeGqsj0yprdNuvsMiTo9p1rwmLYQgKrtUqWoWK0KcKtpTqPN7myg36HD5i4ElkfXmuJ8hE57Gl7pEKHMZEnnv4BGWcXxjyI99p2wwdsD9Ww"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_create_shop_1(self):
        response = client.send(pp.CreateShop(
                                  "KCbVOJr6xvttsoAm4jxkZlaPGnC9YJFp6p0zRrU0lCGV3Uq4HmqHawkKDCgeNO0rz37QmQFa7JuoJnfFva5D9Js4SpYvByeGqsj0yprdNuvsMiTo9p1rwmLYQgKrtUqWoWK0KcKtpTqPN7myg36HD5i4ElkfXmuJ8hE57Gl7pEKHMZEnnv4BGWcXxjyI99p2wwdsD9Ww",
                                  organization_code="St---vmH-hlJ7J331Sy08"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_create_shop_2(self):
        response = client.send(pp.CreateShop(
                                  "KCbVOJr6xvttsoAm4jxkZlaPGnC9YJFp6p0zRrU0lCGV3Uq4HmqHawkKDCgeNO0rz37QmQFa7JuoJnfFva5D9Js4SpYvByeGqsj0yprdNuvsMiTo9p1rwmLYQgKrtUqWoWK0KcKtpTqPN7myg36HD5i4ElkfXmuJ8hE57Gl7pEKHMZEnnv4BGWcXxjyI99p2wwdsD9Ww",
                                  shop_external_id="cGKfPvcPcqXe2SirdOtGUCiEWdi1Ff7o",
                                  organization_code="5Y--Yb---6P-TukuBw-N-CE2"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_create_shop_3(self):
        response = client.send(pp.CreateShop(
                                  "KCbVOJr6xvttsoAm4jxkZlaPGnC9YJFp6p0zRrU0lCGV3Uq4HmqHawkKDCgeNO0rz37QmQFa7JuoJnfFva5D9Js4SpYvByeGqsj0yprdNuvsMiTo9p1rwmLYQgKrtUqWoWK0KcKtpTqPN7myg36HD5i4ElkfXmuJ8hE57Gl7pEKHMZEnnv4BGWcXxjyI99p2wwdsD9Ww",
                                  shop_email="HXOLLDzi3o@ML20.com",
                                  shop_external_id="v2jLgbkZm0a5",
                                  organization_code="S-0-m0IRb3bB-G7-V--6-rl6WV-5I"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_create_shop_4(self):
        response = client.send(pp.CreateShop(
                                  "KCbVOJr6xvttsoAm4jxkZlaPGnC9YJFp6p0zRrU0lCGV3Uq4HmqHawkKDCgeNO0rz37QmQFa7JuoJnfFva5D9Js4SpYvByeGqsj0yprdNuvsMiTo9p1rwmLYQgKrtUqWoWK0KcKtpTqPN7myg36HD5i4ElkfXmuJ8hE57Gl7pEKHMZEnnv4BGWcXxjyI99p2wwdsD9Ww",
                                  shop_tel="06-3925-3181",
                                  shop_email="hNg2Gh4IFi@7DXK.com",
                                  shop_external_id="WH4BW1Bt3mcnIH8T37b4Z6gJVJM5",
                                  organization_code="o-"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_create_shop_5(self):
        response = client.send(pp.CreateShop(
                                  "KCbVOJr6xvttsoAm4jxkZlaPGnC9YJFp6p0zRrU0lCGV3Uq4HmqHawkKDCgeNO0rz37QmQFa7JuoJnfFva5D9Js4SpYvByeGqsj0yprdNuvsMiTo9p1rwmLYQgKrtUqWoWK0KcKtpTqPN7myg36HD5i4ElkfXmuJ8hE57Gl7pEKHMZEnnv4BGWcXxjyI99p2wwdsD9Ww",
                                  shop_address="WWpFcOiWlMfDgcxcJlxLoaQoRA96dZ6S1icruAvDLW",
                                  shop_tel="0279426-5925",
                                  shop_email="lGkmtszNol@lZKD.com",
                                  shop_external_id="7qfTgVdofpEuLyi3SHnm5oHDwZ",
                                  organization_code="y-"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_create_shop_6(self):
        response = client.send(pp.CreateShop(
                                  "KCbVOJr6xvttsoAm4jxkZlaPGnC9YJFp6p0zRrU0lCGV3Uq4HmqHawkKDCgeNO0rz37QmQFa7JuoJnfFva5D9Js4SpYvByeGqsj0yprdNuvsMiTo9p1rwmLYQgKrtUqWoWK0KcKtpTqPN7myg36HD5i4ElkfXmuJ8hE57Gl7pEKHMZEnnv4BGWcXxjyI99p2wwdsD9Ww",
                                  shop_postal_code="204-1561",
                                  shop_address="YBi5IMIf83o46tM1uAXbWimqAE3Dcc4WGt00szKRkD20l5WdYc73FGvp3SuLO0AlqFo3zVjngg",
                                  shop_tel="0934267-978",
                                  shop_email="F9dFCg2T4e@8RjF.com",
                                  shop_external_id="5SFckQVV",
                                  organization_code="FpXj49"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_create_shop_v2_0(self):
        response = client.send(pp.CreateShopV2(
                                  "EtkNJVErHp1jWI2d28DyMO1Lr4TCCyhNfr1GE6blFfM5u1E1meAhuITUibwYMGbQVn0ANrtkB35WHrhfshlwyeVof3OmmTnFrGptzVk5XGcuo6FJegxyVByl2lqpBQFLDmBKZUbuF5frlZI"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_create_shop_v2_1(self):
        response = client.send(pp.CreateShopV2(
                                  "EtkNJVErHp1jWI2d28DyMO1Lr4TCCyhNfr1GE6blFfM5u1E1meAhuITUibwYMGbQVn0ANrtkB35WHrhfshlwyeVof3OmmTnFrGptzVk5XGcuo6FJegxyVByl2lqpBQFLDmBKZUbuF5frlZI",
                                  can_topup_private_money_ids=["b5d1975d-9fce-46da-9aaf-88219a1e1627", "13604756-92ff-471d-b202-64b9393d729a"]
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_create_shop_v2_2(self):
        response = client.send(pp.CreateShopV2(
                                  "EtkNJVErHp1jWI2d28DyMO1Lr4TCCyhNfr1GE6blFfM5u1E1meAhuITUibwYMGbQVn0ANrtkB35WHrhfshlwyeVof3OmmTnFrGptzVk5XGcuo6FJegxyVByl2lqpBQFLDmBKZUbuF5frlZI",
                                  private_money_ids=["8c18cc91-4bde-4d94-b814-9b768c042618", "23e20c5e-b037-40a0-ad6a-e1b7a15e3b62", "26bb1511-69f6-4c02-a9ab-482a56358a79", "2328d081-be2f-43ef-a2ed-66a8a835b8ff", "f2f3642a-bdc2-4fdb-b80c-74cf975a64c9", "73b973c7-4d79-4cce-93d2-55d4fbdaa122", "7242b0a1-cec7-49c5-8dd2-da0a35010743", "eb61aea7-af4b-446d-8b6f-ec80b504768b", "ae57372b-e602-4793-b9ee-5b4c40e0bfcc", "f95ea282-a32c-4603-b2c8-adb1dd13bb15"],
                                  can_topup_private_money_ids=["5084e901-4e68-4ce1-96ba-96165cd7b001", "b7c0b15d-ca91-445a-8eb0-0a79c31feac7"]
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_create_shop_v2_3(self):
        response = client.send(pp.CreateShopV2(
                                  "EtkNJVErHp1jWI2d28DyMO1Lr4TCCyhNfr1GE6blFfM5u1E1meAhuITUibwYMGbQVn0ANrtkB35WHrhfshlwyeVof3OmmTnFrGptzVk5XGcuo6FJegxyVByl2lqpBQFLDmBKZUbuF5frlZI",
                                  organization_code="OV4sCHoq27-0-G",
                                  private_money_ids=["95a382ea-cd9d-45ce-8f8d-5b5f806b1b82", "9c00a7b3-d559-43d6-8776-685d5dcaeff9", "b3c6cc50-b39d-4779-b83f-033960a474e4", "3b647d38-d1aa-418a-a599-75930627d0b1", "184bc90a-1043-4fd4-9984-103a3ea7c60a", "c8a1e2f8-955b-402b-ba27-c0c9924eeb8e", "4a595c4b-c1b9-42a3-8902-71abcbb58dda", "286176ea-bbe3-49af-bc9f-8ac1297bff11"],
                                  can_topup_private_money_ids=["9d32bca6-420f-4de0-81cc-6a934c2b8222", "dba6264c-b74b-42b6-b2db-53b7b5cf225d", "cc5cb274-f0af-461f-8d52-dd1f444f5cfa"]
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_create_shop_v2_4(self):
        response = client.send(pp.CreateShopV2(
                                  "EtkNJVErHp1jWI2d28DyMO1Lr4TCCyhNfr1GE6blFfM5u1E1meAhuITUibwYMGbQVn0ANrtkB35WHrhfshlwyeVof3OmmTnFrGptzVk5XGcuo6FJegxyVByl2lqpBQFLDmBKZUbuF5frlZI",
                                  external_id="qFgh4D92lCwnLTeBkWgbq7z6eo",
                                  organization_code="i--0dv2r-v98g-p",
                                  private_money_ids=["29612711-dfa8-4b64-ba3a-68c58d46be7b", "87128e41-a7db-4897-be83-1cbb0b4088b5", "569151cd-bef0-4751-ae07-e58d71ade1d4", "a90846bd-d441-4de4-b388-cc296b1216d2", "a161f90d-89c5-4bf2-bc0f-bc0cf46f39d7", "6cda8a1b-f3a1-4eda-b8fd-a0ec5da85b33", "e8193d3e-f013-47d7-91d3-c6f58656cf45", "831c6951-c9cd-4700-891a-675ab54a90b2"],
                                  can_topup_private_money_ids=["245250a5-3434-4a2e-a3f4-f6526279a546", "306015c2-8618-435d-a30c-fe264405217d", "08cdb045-8c7b-43f3-bbf8-61531bc8ebf0", "0ca3162e-a048-4a2c-9bd1-6f9a8e01ccfe"]
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_create_shop_v2_5(self):
        response = client.send(pp.CreateShopV2(
                                  "EtkNJVErHp1jWI2d28DyMO1Lr4TCCyhNfr1GE6blFfM5u1E1meAhuITUibwYMGbQVn0ANrtkB35WHrhfshlwyeVof3OmmTnFrGptzVk5XGcuo6FJegxyVByl2lqpBQFLDmBKZUbuF5frlZI",
                                  email="gayMonXew7@Et3Q.com",
                                  external_id="IBWJHi",
                                  organization_code="5",
                                  private_money_ids=["ceb839b4-7051-432b-bf14-63a143bb632e", "14f6b6f3-05a8-48a3-86be-8b4f7775e2a0", "46e911c6-e803-4745-85f6-fd17ab20eedb"],
                                  can_topup_private_money_ids=["60c86452-7071-4598-a76e-7a6ca66f8733", "6afb746c-1401-4413-a190-549312b34906", "41f1e2db-b7ef-484c-8e84-8edf06b87cee", "9eb89c5a-a28d-410c-9da4-c5f150575153", "0838088f-a213-4f6d-ab95-f0c39a2298cf", "3d5e24c1-4e1d-454c-9bbc-92f2b1874919", "abad5551-9006-4cd7-8e3f-35717c49b014", "6afd12b7-5b20-42b1-a471-88c5845bb814", "eea4aafc-d5b4-4a49-98bc-efdf758aede4"]
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_create_shop_v2_6(self):
        response = client.send(pp.CreateShopV2(
                                  "EtkNJVErHp1jWI2d28DyMO1Lr4TCCyhNfr1GE6blFfM5u1E1meAhuITUibwYMGbQVn0ANrtkB35WHrhfshlwyeVof3OmmTnFrGptzVk5XGcuo6FJegxyVByl2lqpBQFLDmBKZUbuF5frlZI",
                                  tel="052-436-1821",
                                  email="LM0pdp1q56@CWM6.com",
                                  external_id="AAL2YYLme6",
                                  organization_code="h--I--k-z-0-B",
                                  private_money_ids=["425b222a-6388-43a3-9655-d631ddbaef06", "53aacb2c-7fd7-4a00-ae13-972c0e9d433c", "e0a5eacd-7db3-477e-bb37-dd519eaa8bf1", "439f6813-71e7-4bb8-b477-50b3be621436", "3a447047-b1b5-48e3-9aa0-466e429f3518", "b4a33d83-7f19-4121-a8dd-c9da292733f3", "cdeee6e5-7a2c-432d-930b-4975ac62f9b3", "01d5621f-6170-4c16-ac81-29b28c8c4fe5"],
                                  can_topup_private_money_ids=["59af46c7-5555-4c89-a453-489db8360782", "7ad7c8dd-555b-4a93-9591-d9a62aa86306", "8e7ea0bd-3a1b-47cb-9e01-8e8be86fcb92", "f407ea73-6e0d-4ad8-8a14-d834d85f6386", "4859c660-833d-41ba-87a7-abed52ccbdcc", "e3d8cdf0-7f9b-41a5-b8c8-a1b2ca744522"]
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_create_shop_v2_7(self):
        response = client.send(pp.CreateShopV2(
                                  "EtkNJVErHp1jWI2d28DyMO1Lr4TCCyhNfr1GE6blFfM5u1E1meAhuITUibwYMGbQVn0ANrtkB35WHrhfshlwyeVof3OmmTnFrGptzVk5XGcuo6FJegxyVByl2lqpBQFLDmBKZUbuF5frlZI",
                                  address="b5MHIkA1odlhZiutA5hChoVncJib4g",
                                  tel="02-19361",
                                  email="x50IFGzRyd@eJJp.com",
                                  external_id="wCts10453OAEWV9JIs",
                                  organization_code="Sm",
                                  private_money_ids=["bf5c9638-110b-4514-b45f-16d40c8930d4", "38e5835c-d044-431c-a102-85425da95e7d", "fd8b1179-e403-4b79-a66e-ec9443d36807", "97e21626-e679-4649-afb6-d08570743a01", "2ed56a93-89e6-4c49-a292-81a1b72da985", "1f65dad0-de88-4b50-92e3-cb557786cfa2", "162b28a4-b0d6-47df-af2f-8b682a43f806"],
                                  can_topup_private_money_ids=["2e782613-9d63-4123-b3cf-2745054ae379", "75def0cc-280a-458c-8648-2257b436f9f3", "6ca6e07e-082a-43fa-95ad-aa694a2a28d8", "d109fed8-e1a9-495b-8a55-87a41fb05e86", "b2972da9-e0a8-480b-8aef-03572eb1e320", "a0ae8278-6c9d-4b8b-96ea-bd57b97f424a", "d978bfaa-179e-471d-9333-8a0802d986d9"]
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_create_shop_v2_8(self):
        response = client.send(pp.CreateShopV2(
                                  "EtkNJVErHp1jWI2d28DyMO1Lr4TCCyhNfr1GE6blFfM5u1E1meAhuITUibwYMGbQVn0ANrtkB35WHrhfshlwyeVof3OmmTnFrGptzVk5XGcuo6FJegxyVByl2lqpBQFLDmBKZUbuF5frlZI",
                                  postal_code="3206991",
                                  address="Ypq22tRojr73gPwyZw0n5lmGxqkkvVUc2tW4ZMGoXGJmU8TkUnRMOOGG0WE8aDekdgbqbr2qn8vVm2Z7M8ID6oODu9tHg5NpVQk6bDP2LO0VzxHMnHjwcDnT69haofPuOF8KjpGrZ5YbRFhbfQbsE1Kdvc2LblPMe0Zgoi937",
                                  tel="0116-632665",
                                  email="mSJwGtjUQP@6566.com",
                                  external_id="g9TvkGukHlKZZ4EGLPvECrs299HSNWbn2",
                                  organization_code="-BLwY9a-c2u8--8",
                                  private_money_ids=["30832bd3-9654-43b2-9421-c50bfb8e87a4", "d3be392a-5d7a-4c92-9eb8-6acbd9ec3200", "67a721e0-eac7-478f-a6de-3b209aa0e8b2", "3f52be85-a3d3-4cbd-b491-0cdc51320233", "bcc5b649-bebb-4569-bb96-5b16047c1b5c", "425cc0f8-7298-4b97-a6fa-79f21490887b", "7ba6a793-2d11-4091-a1e4-aa97cdd96548", "c8bae699-31f9-40ca-801d-6166f2b246c1"],
                                  can_topup_private_money_ids=[]
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_get_shop_0(self):
        response = client.send(pp.GetShop(
                                  "1b12b24f-a7c7-4d8d-b20d-191b32636718"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_update_shop_0(self):
        response = client.send(pp.UpdateShop(
                                  "56ac32f9-3247-4751-9e9b-18a802438228"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_update_shop_1(self):
        response = client.send(pp.UpdateShop(
                                  "56ac32f9-3247-4751-9e9b-18a802438228",
                                  can_topup_private_money_ids=["bb049710-8490-4512-b400-f214048b6f5c", "afaa37a1-15fc-4219-bb6d-a7fd41e3b9fd", "e47b0e2b-faa7-451c-a24c-150e71f906a8", "7919b552-4ccf-4de6-851c-eb8c6605a151", "8367722a-d840-4796-9d26-5752f618c3f6"]
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_update_shop_2(self):
        response = client.send(pp.UpdateShop(
                                  "56ac32f9-3247-4751-9e9b-18a802438228",
                                  private_money_ids=["35396aeb-f324-4027-9634-a654a786fb79", "8151e1ce-d25e-46fc-b567-e383bc1a2f8f", "551a9c3e-55d1-4b11-a2d4-9b8239902409", "2e272fc1-c06b-4528-832c-52d2f7bb5fe9", "29856f97-f9b8-4ae1-a90a-0c8cabedf6b5", "ce9e4342-94a6-4546-8811-9e76d9cdbf07", "28a8a87c-f5ac-43f1-9792-26a5a348b62c"],
                                  can_topup_private_money_ids=["0634fed6-7c27-4840-afcf-152dc41fc147", "9a5fbcbb-1ee1-48de-8208-6026cfd83da8"]
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_update_shop_3(self):
        response = client.send(pp.UpdateShop(
                                  "56ac32f9-3247-4751-9e9b-18a802438228",
                                  external_id="RJV0sBboiNPCOPZs0g",
                                  private_money_ids=["ea3f1e24-a5b7-4a13-9c80-ee688774d230", "e0b86f73-dda2-4bd0-abe7-348dfca75d4e", "22ae4e8d-ad6e-4f72-9ff7-cf11dbc92f0c", "a50a1abd-6227-475f-9b88-cb15200122b7", "8a23bdab-db3c-41b7-a7e2-fc48733b8bff"],
                                  can_topup_private_money_ids=["23140355-7c08-47ab-944b-cdd912cd6fb5"]
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_update_shop_4(self):
        response = client.send(pp.UpdateShop(
                                  "56ac32f9-3247-4751-9e9b-18a802438228",
                                  email="GkH0XDwnHy@LzQt.com",
                                  external_id="AMSIUsHkb7zCYqkQqdSbQVH8OPJDGXVBln63",
                                  private_money_ids=["41ab32cb-2d6b-43ad-9fc6-0414e2c2aa22", "bebce255-6577-4559-976c-23f289afb858", "75b92730-de69-435a-94f3-5e916295419e", "92aa3fe3-5d40-4b4b-a67a-c7af4bf404e3", "82efb1fa-cda0-42d0-b12e-c4dfad139d73", "55b7aa3b-97bd-4631-9262-c9762e76698a"],
                                  can_topup_private_money_ids=["ed59c48b-8a94-49c9-9ce7-7ef6626327a1", "15371156-ba6d-4ca4-9366-1ffa74b0525d", "c72ef57c-d1d2-4fe0-a224-8fe51eba868a", "802a7ef7-4113-493c-9e36-5ea7f4038168", "a1498c53-e5fe-45a3-afa3-51893097ce39", "f959c38b-94e9-4735-aa47-ba6cab45168b"]
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_update_shop_5(self):
        response = client.send(pp.UpdateShop(
                                  "56ac32f9-3247-4751-9e9b-18a802438228",
                                  tel="045-105-3371",
                                  email="VaCcir8RDm@5Jf0.com",
                                  external_id="KJeJnXQHIxfEZIezNLmcU1ctYZzBfiYnY",
                                  private_money_ids=["fb4e5dea-dcc7-462d-9c35-6bd55e829b53", "9ca6d0cb-2298-447e-b002-10c0884de211", "9d00c944-75ee-45d1-aeaa-b45de129c87a", "8462a385-53e0-4205-89a6-20d40a08ab21", "4387ea75-ff30-4161-863a-5592c38c2ead", "4b686ea1-28b1-460d-9aab-d2ab35153c2d", "b1da33f0-8b5e-43a6-8bba-9de4dbcd9316"],
                                  can_topup_private_money_ids=["a462c921-e322-4147-ba5f-820d93aaee20", "ffa94bb2-8672-4e98-9861-a08e67e7ab8b", "bd5e07b4-12ae-4a48-a407-8c25b93288dd", "08aa02d9-8d16-4dd8-bbdb-894b5689085b", "77ad9c4a-1b40-4ea0-8a87-5198f421c2cf", "8f371a73-34d2-40e1-846d-75ad617a357b"]
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_update_shop_6(self):
        response = client.send(pp.UpdateShop(
                                  "56ac32f9-3247-4751-9e9b-18a802438228",
                                  address="xgv9X1Q",
                                  tel="06-456-6617",
                                  email="jvrKcJyJNC@CuLU.com",
                                  external_id="HZfefjQ",
                                  private_money_ids=["941a2c55-aee9-43a5-809f-55b22c599862", "bdc6a972-1b85-41a2-90c3-05d67347de1e", "f3777057-a97c-4fab-b543-4d469690c917", "6b0cb6a4-6429-4497-9f19-5187deb02dc9", "d644cdfe-492c-4d00-befe-a7c15120f6d5", "00de768e-2af5-438b-a7e7-2e6f27140692", "14224394-728e-41ba-809e-63a74c60946a", "68a4183e-90e8-4acd-90da-835f64000f04", "326de243-e034-4c19-9be7-bfd00f53346e"],
                                  can_topup_private_money_ids=["d4386f2c-be41-432c-aa77-b4c22b8a2806", "d7b9406e-032c-419c-bf47-be05945fe422", "bb51b82b-7628-42e5-949e-95df82b7ca43", "adf202d9-a572-4109-9fc3-1dc3c3c395f1", "4e9e1a38-e61c-4ff7-bd47-f66a723a23fe", "31ff470e-ffc9-454d-a4ba-fced2df535db", "18a57eec-2b6a-4ef3-834d-ca1a44b69b3c", "75e013a4-36c2-45b7-868a-d5f29c21c0c2", "d843b94e-b92e-446f-8f45-17f53f090720"]
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_update_shop_7(self):
        response = client.send(pp.UpdateShop(
                                  "56ac32f9-3247-4751-9e9b-18a802438228",
                                  postal_code="0521643",
                                  address="ZewDZpKd82viMmzTAsd3FUYO2VChazQj70BjfXkVfdwZ6y0WjcqdHP9GkeiolbYxOenGcdxMqprbMsWv8ifOcslj9BIq4K8VuPuwgTP82hCWOHqgFtD3dX5rTR6GPRoOhI6tfs0OyNeObwMCchJguWnsoaS4F5",
                                  tel="03715819-3152",
                                  email="ugh2tmTHMC@Rtv8.com",
                                  external_id="TW9jfh9kXB9ay3PtML5ps7nqbvxQ5hW",
                                  private_money_ids=[],
                                  can_topup_private_money_ids=["d894f8ac-e58b-4e8a-a8ad-f9c7ae846d8d", "b83b0d55-378a-4361-ad0e-973679de3436", "65242f16-90b6-43f6-9536-d450d699159d", "32a3a544-222d-4007-a9db-5f9b1874f479", "e853bb3d-1ae5-4001-b783-fb3cb8d6ce06", "5bd608b1-8b92-4fa4-ae53-5904f0a7f8bd", "e87c938a-b281-4f52-916d-eff460a6a449", "7a67eb75-6387-41f8-ae8a-ca2544495e4d", "cfdd1d44-45fa-409a-9c5c-5dfb2b8b91d0"]
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_update_shop_8(self):
        response = client.send(pp.UpdateShop(
                                  "56ac32f9-3247-4751-9e9b-18a802438228",
                                  name="Ds75LzPCLVhELKuWPcXmoWD39zgUQGlulUVJRZjcwkExeE94lL8qCxhsVwzOZIKHnnLtpXOh3KtVdlN9Amjlk2guzhURciPZEx5gV81lBiu9CS6kt5JyzEEFGhm1Gf5Jb9FZyAK2mS9XZpjRwsQoyC2Q9L9sgl3XuvvIzUxDbC2xGL5j7kJZLjvlZRTaAb",
                                  postal_code="221-6139",
                                  address="shWzdQDj9EsovFNkNFoVbF4jbiKxL8a",
                                  tel="044-2186567",
                                  email="uLwQOo9PzR@jsci.com",
                                  external_id="av3XHODZ8KAsv32Erc0BzMSguuB84Ovp",
                                  private_money_ids=["a6be9c63-2a3f-4128-90d8-11981d482cfd", "6885e589-0652-4098-81e7-445c7298c821", "a5c24ef5-0881-46d1-8bca-fc547faf84d7", "87022178-e332-454c-81dd-27526b1d8a46"],
                                  can_topup_private_money_ids=["70f9cf13-9e99-4f00-9e5f-ff755807efc1", "178b53f6-25f9-4666-a26e-3faea89a050c", "92e12289-bd6a-4ec1-987c-db3c3b673fb8", "6f576090-a547-4502-9f11-478dc377b8e9", "734ee9a9-331b-4905-90fa-af207c676de8", "8bebc7a2-4571-4c77-8f3a-64e67ac00243", "c6df419a-0171-48f5-89ba-95a7ddfbafb8"]
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_get_private_moneys_0(self):
        response = client.send(pp.GetPrivateMoneys(
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_get_private_moneys_1(self):
        response = client.send(pp.GetPrivateMoneys(
                                  per_page=4396
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_get_private_moneys_2(self):
        response = client.send(pp.GetPrivateMoneys(
                                  page=7127,
                                  per_page=5935
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_get_private_moneys_3(self):
        response = client.send(pp.GetPrivateMoneys(
                                  organization_code="29Sy2N--ow1-9ii4LwUOde39Z--eT8",
                                  page=9262,
                                  per_page=5183
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_get_private_money_organization_summaries_0(self):
        response = client.send(pp.GetPrivateMoneyOrganizationSummaries(
                                  "5080ac00-9a74-43a1-abb0-a8d70e30bdcf"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_get_private_money_organization_summaries_1(self):
        response = client.send(pp.GetPrivateMoneyOrganizationSummaries(
                                  "5080ac00-9a74-43a1-abb0-a8d70e30bdcf",
                                  page=2288
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_get_private_money_organization_summaries_2(self):
        response = client.send(pp.GetPrivateMoneyOrganizationSummaries(
                                  "5080ac00-9a74-43a1-abb0-a8d70e30bdcf",
                                  per_page=5094,
                                  page=5552
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_get_private_money_organization_summaries_3(self):
        response = client.send(pp.GetPrivateMoneyOrganizationSummaries(
                                  "5080ac00-9a74-43a1-abb0-a8d70e30bdcf",
                                  from="2015-11-22T10:42:40.000000+09:00",
                                  to="2025-08-05T19:36:11.000000+09:00"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_get_private_money_organization_summaries_4(self):
        response = client.send(pp.GetPrivateMoneyOrganizationSummaries(
                                  "5080ac00-9a74-43a1-abb0-a8d70e30bdcf",
                                  from="2016-05-12T08:29:59.000000+09:00",
                                  to="2017-05-23T06:23:35.000000+09:00",
                                  page=1216
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_get_private_money_organization_summaries_5(self):
        response = client.send(pp.GetPrivateMoneyOrganizationSummaries(
                                  "5080ac00-9a74-43a1-abb0-a8d70e30bdcf",
                                  from="2018-10-06T13:45:16.000000+09:00",
                                  to="2021-05-31T21:57:45.000000+09:00",
                                  per_page=7893,
                                  page=5925
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_list_customer_transactions_0(self):
        response = client.send(pp.ListCustomerTransactions(
                                  "b2a6f737-469d-4b0e-8b07-7ff8aad3a4cb"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_list_customer_transactions_1(self):
        response = client.send(pp.ListCustomerTransactions(
                                  "b2a6f737-469d-4b0e-8b07-7ff8aad3a4cb",
                                  per_page=5364
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_list_customer_transactions_2(self):
        response = client.send(pp.ListCustomerTransactions(
                                  "b2a6f737-469d-4b0e-8b07-7ff8aad3a4cb",
                                  page=8564,
                                  per_page=4775
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_list_customer_transactions_3(self):
        response = client.send(pp.ListCustomerTransactions(
                                  "b2a6f737-469d-4b0e-8b07-7ff8aad3a4cb",
                                  to="2023-10-08T15:49:59.000000+09:00",
                                  page=3652,
                                  per_page=8926
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_list_customer_transactions_4(self):
        response = client.send(pp.ListCustomerTransactions(
                                  "b2a6f737-469d-4b0e-8b07-7ff8aad3a4cb",
                                  from="2021-06-04T04:08:23.000000+09:00",
                                  to="2018-09-13T06:29:22.000000+09:00",
                                  page=5482,
                                  per_page=7425
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_list_customer_transactions_5(self):
        response = client.send(pp.ListCustomerTransactions(
                                  "b2a6f737-469d-4b0e-8b07-7ff8aad3a4cb",
                                  is_modified=False,
                                  from="2017-12-10T10:29:30.000000+09:00",
                                  to="2016-06-29T23:07:04.000000+09:00",
                                  page=3279,
                                  per_page=68
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_list_customer_transactions_6(self):
        response = client.send(pp.ListCustomerTransactions(
                                  "b2a6f737-469d-4b0e-8b07-7ff8aad3a4cb",
                                  type="AC",
                                  is_modified=True,
                                  from="2020-09-04T16:18:51.000000+09:00",
                                  to="2021-01-20T08:07:27.000000+09:00",
                                  page=7550,
                                  per_page=9559
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_list_customer_transactions_7(self):
        response = client.send(pp.ListCustomerTransactions(
                                  "b2a6f737-469d-4b0e-8b07-7ff8aad3a4cb",
                                  receiver_customer_id="fa9f4d26-188e-4c9f-a43f-2fe41e5f81c0",
                                  type="bV",
                                  is_modified=False,
                                  from="2018-10-23T03:29:34.000000+09:00",
                                  to="2021-10-18T19:25:09.000000+09:00",
                                  page=3878,
                                  per_page=6066
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_list_customer_transactions_8(self):
        response = client.send(pp.ListCustomerTransactions(
                                  "b2a6f737-469d-4b0e-8b07-7ff8aad3a4cb",
                                  sender_customer_id="0cbf5c9c-ca70-486e-ac63-a7007587ba49",
                                  receiver_customer_id="76136b3c-88a1-4052-afa5-7cc1f3962d60",
                                  type="9US2oe",
                                  is_modified=False,
                                  from="2021-07-30T00:52:40.000000+09:00",
                                  to="2022-09-19T12:45:54.000000+09:00",
                                  page=9467,
                                  per_page=6814
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_get_bulk_transaction_0(self):
        response = client.send(pp.GetBulkTransaction(
                                  "fec3ad81-9df2-4507-a90f-c4c14171ac7f"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_create_cashtray_0(self):
        response = client.send(pp.CreateCashtray(
                                  "23c9b47a-d9f9-4a3c-b288-c8fb9b16f095",
                                  "72ccafde-ff65-484c-b944-a761e11847af",
                                  2353
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_create_cashtray_1(self):
        response = client.send(pp.CreateCashtray(
                                  "23c9b47a-d9f9-4a3c-b288-c8fb9b16f095",
                                  "72ccafde-ff65-484c-b944-a761e11847af",
                                  2353,
                                  expires_in=5367
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_create_cashtray_2(self):
        response = client.send(pp.CreateCashtray(
                                  "23c9b47a-d9f9-4a3c-b288-c8fb9b16f095",
                                  "72ccafde-ff65-484c-b944-a761e11847af",
                                  2353,
                                  description="eWrdHf6rMU",
                                  expires_in=4822
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_get_cashtray_0(self):
        response = client.send(pp.GetCashtray(
                                  "7ac9d35e-4125-41cb-bf27-5a47d073818f"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_cancel_cashtray_0(self):
        response = client.send(pp.CancelCashtray(
                                  "9261d8a7-6801-43c0-9159-0a5a7b07239e"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_update_cashtray_0(self):
        response = client.send(pp.UpdateCashtray(
                                  "c9b496b2-d72d-41c7-8b5e-8ac90179a4cd"
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_update_cashtray_1(self):
        response = client.send(pp.UpdateCashtray(
                                  "c9b496b2-d72d-41c7-8b5e-8ac90179a4cd",
                                  expires_in=5950
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_update_cashtray_2(self):
        response = client.send(pp.UpdateCashtray(
                                  "c9b496b2-d72d-41c7-8b5e-8ac90179a4cd",
                                  description="qQdlPxOOQPgSLZ1hL1HCidrMLSsuPHPP4hA77z3kEqEEqKnEOn6pWRCYKhaDwAJgv5HGsoATpkozCWNPnVcafqtCOlu9sOrHbjMGBFqhiLYJCSpqEJeFe4uyolfBoyWGa27VMOL3qaynRpRsPj3MO4uMEB8Br4kXc5sEzAwVuhr4TcW2KgVNHMAV0lJcQpjHr9Ii",
                                  expires_in=1868
        ))
        self.assertNotEqual(response.status_code, 400)

    def test_update_cashtray_3(self):
        response = client.send(pp.UpdateCashtray(
                                  "c9b496b2-d72d-41c7-8b5e-8ac90179a4cd",
                                  amount=6608,
                                  description="s1TebTuQ2J7wQYvdeo6EyArRbGEB6HZNXr",
                                  expires_in=2494
        ))
        self.assertNotEqual(response.status_code, 400)

